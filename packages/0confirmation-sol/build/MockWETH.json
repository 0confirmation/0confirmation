{
  "contractName": "MockWETH",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol\":\"MockWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol\":{\"keccak256\":\"0xe85021bc93486c24002dca0c8a1b265da7b9696831be473e0cb257d0ad175243\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3800c3060355fdb2d8065058af3fce4eb0d3bd0090bb649e2dede0ea707d4e9\",\"dweb:/ipfs/QmZrhYQVHcJz9gxYS6QzGCa68AfBBR7gVwm1HZHghoTigp\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol\":{\"keccak256\":\"0xe5604da8e5fd8a904295368894653c81e61e1cc64f90f6eb84f65f05dc029984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b595ad829f6fdd0843faf370c8909ac54d92d811d7fbe5ffd5a458b473aee0\",\"dweb:/ipfs/QmdXSYCkeSTzke6VQwWYQZWgdGashT5ot8pz9jZGByYrdM\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xc6fb4c940628ca2cde81ed6d20fc9ff456b60f55aafef555f43a86a2dda7ad9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f17dda58954a84ffca3d53c0b6435bad7f5c42ab3a9c4603db2f1aef00edae4e\",\"dweb:/ipfs/QmehW99QmmzKvnqTsprsApDF7mK2JVo6nnrZ47znhLTFjh\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xaa0e11a791bc975d581a4f5b7a8d9c16a880a354c89312318ae072ae3e740409\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://982d8b344f76193834260436d74c81e5a8f9e89106bb4cd72bbaabda4f3f59c2\",\"dweb:/ipfs/QmSrvP5TkQRhKDVCTpsV3uaKLBhkt7PjUY89vdtM9o5ybK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4daf1e5f59e8ca32aca35cffc32dede6515b06d0d7e5013cd78bb24094fad719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93703bec9d9f5e4aa3f027d5db956ce94716f58182fc53ebf90bed7968bca51\",\"dweb:/ipfs/QmPdV3o4ADR9ABUNKwabR3GxaeGQX7xMdQur2aqEi5KnT9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x934dbc549a8df514456047ad1c6ab257127a03f4109272834c30e596bbe10d1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cf247ade00a28c632dfe2c2521e1952f467c6081b89375c34b1eb297441d9b\",\"dweb:/ipfs/QmYGNAHCtN1m3QDynteTeVCfwFZBZRpGJNMjxwVBUifnfB\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051806040016040528060048152602001630ae8aa8960e31b815250604051806040016040528060048152602001630ae8aa8960e31b8152506012828281600390805190602001906100659291906100b9565b5080516100799060049060208401906100b9565b50506005805460ff191660121790555061009b816001600160e01b036100a316565b505050610154565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100fa57805160ff1916838001178555610127565b82800160010185558215610127579182015b8281111561012757825182559160200191906001019061010c565b50610133929150610137565b5090565b61015191905b80821115610133576000815560010161013d565b90565b610e2f806101636000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d71461031e578063a9059cbb1461034a578063d0e30db014610376578063dd62ed3e1461037e57610100565b806342966c68146102a757806370a08231146102c457806379cc6790146102ea57806395d89b411461031657610100565b80632e1a7d4d116100d35780632e1a7d4d14610212578063313ce56714610231578063395093511461024f57806340c10f191461027b57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103ac565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b038135169060200135610442565b604080519115158252519081900360200190f35b6101ca61045f565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610465565b61022f6004803603602081101561022857600080fd5b50356104f2565b005b6102396104f5565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561026557600080fd5b506001600160a01b0381351690602001356104fe565b61022f6004803603604081101561029157600080fd5b506001600160a01b038135169060200135610552565b61022f600480360360208110156102bd57600080fd5b5035610560565b6101ca600480360360208110156102da57600080fd5b50356001600160a01b0316610571565b61022f6004803603604081101561030057600080fd5b506001600160a01b03813516906020013561058c565b61010d6105ec565b6101ae6004803603604081101561033457600080fd5b506001600160a01b03813516906020013561064d565b6101ae6004803603604081101561036057600080fd5b506001600160a01b0381351690602001356106bb565b61022f6106cf565b6101ca6004803603604081101561039457600080fd5b506001600160a01b03813581169160200135166106d1565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b5050505050905090565b600061045661044f6106fc565b8484610700565b50600192915050565b60025490565b60006104728484846107ec565b6104e88461047e6106fc565b6104e385604051806060016040528060288152602001610d1f602891396001600160a01b038a166000908152600160205260408120906104bc6106fc565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61095316565b610700565b5060019392505050565b50565b60055460ff1690565b600061045661050b6106fc565b846104e3856001600061051c6106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6109ea16565b61055c8282610a4b565b5050565b6104f261056b6106fc565b82610b47565b6001600160a01b031660009081526020819052604090205490565b60006105c982604051806060016040528060248152602001610d47602491396105bc866105b76106fc565b6106d1565b919063ffffffff61095316565b90506105dd836105d76106fc565b83610700565b6105e78383610b47565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b600061045661065a6106fc565b846104e385604051806060016040528060258152602001610dd560259139600160006106846106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61095316565b60006104566106c86106fc565b84846107ec565b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166107455760405162461bcd60e51b8152600401808060200182810382526024815260200180610db16024913960400191505060405180910390fd5b6001600160a01b03821661078a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610cd76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108315760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8c6025913960400191505060405180910390fd5b6001600160a01b0382166108765760405162461bcd60e51b8152600401808060200182810382526023815260200180610c926023913960400191505060405180910390fd5b6108818383836105e7565b6108c481604051806060016040528060268152602001610cf9602691396001600160a01b038616600090815260208190526040902054919063ffffffff61095316565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f9908263ffffffff6109ea16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a757818101518382015260200161098f565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a44576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aa6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ab2600083836105e7565b600254610ac5908263ffffffff6109ea16565b6002556001600160a01b038216600090815260208190526040902054610af1908263ffffffff6109ea16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b8c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d6b6021913960400191505060405180910390fd5b610b98826000836105e7565b610bdb81604051806060016040528060228152602001610cb5602291396001600160a01b038516600090815260208190526040902054919063ffffffff61095316565b6001600160a01b038316600090815260208190526040902055600254610c07908263ffffffff610c4f16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610a4483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061095356fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209693701954cf624ebe77e33afd007cf7ed153255e513f83d5daefa05d6b22aeb64736f6c63430006080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d71461031e578063a9059cbb1461034a578063d0e30db014610376578063dd62ed3e1461037e57610100565b806342966c68146102a757806370a08231146102c457806379cc6790146102ea57806395d89b411461031657610100565b80632e1a7d4d116100d35780632e1a7d4d14610212578063313ce56714610231578063395093511461024f57806340c10f191461027b57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103ac565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b038135169060200135610442565b604080519115158252519081900360200190f35b6101ca61045f565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610465565b61022f6004803603602081101561022857600080fd5b50356104f2565b005b6102396104f5565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561026557600080fd5b506001600160a01b0381351690602001356104fe565b61022f6004803603604081101561029157600080fd5b506001600160a01b038135169060200135610552565b61022f600480360360208110156102bd57600080fd5b5035610560565b6101ca600480360360208110156102da57600080fd5b50356001600160a01b0316610571565b61022f6004803603604081101561030057600080fd5b506001600160a01b03813516906020013561058c565b61010d6105ec565b6101ae6004803603604081101561033457600080fd5b506001600160a01b03813516906020013561064d565b6101ae6004803603604081101561036057600080fd5b506001600160a01b0381351690602001356106bb565b61022f6106cf565b6101ca6004803603604081101561039457600080fd5b506001600160a01b03813581169160200135166106d1565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b5050505050905090565b600061045661044f6106fc565b8484610700565b50600192915050565b60025490565b60006104728484846107ec565b6104e88461047e6106fc565b6104e385604051806060016040528060288152602001610d1f602891396001600160a01b038a166000908152600160205260408120906104bc6106fc565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61095316565b610700565b5060019392505050565b50565b60055460ff1690565b600061045661050b6106fc565b846104e3856001600061051c6106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6109ea16565b61055c8282610a4b565b5050565b6104f261056b6106fc565b82610b47565b6001600160a01b031660009081526020819052604090205490565b60006105c982604051806060016040528060248152602001610d47602491396105bc866105b76106fc565b6106d1565b919063ffffffff61095316565b90506105dd836105d76106fc565b83610700565b6105e78383610b47565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b600061045661065a6106fc565b846104e385604051806060016040528060258152602001610dd560259139600160006106846106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61095316565b60006104566106c86106fc565b84846107ec565b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166107455760405162461bcd60e51b8152600401808060200182810382526024815260200180610db16024913960400191505060405180910390fd5b6001600160a01b03821661078a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610cd76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108315760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8c6025913960400191505060405180910390fd5b6001600160a01b0382166108765760405162461bcd60e51b8152600401808060200182810382526023815260200180610c926023913960400191505060405180910390fd5b6108818383836105e7565b6108c481604051806060016040528060268152602001610cf9602691396001600160a01b038616600090815260208190526040902054919063ffffffff61095316565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f9908263ffffffff6109ea16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a757818101518382015260200161098f565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a44576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aa6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ab2600083836105e7565b600254610ac5908263ffffffff6109ea16565b6002556001600160a01b038216600090815260208190526040902054610af1908263ffffffff6109ea16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b8c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d6b6021913960400191505060405180910390fd5b610b98826000836105e7565b610bdb81604051806060016040528060228152602001610cb5602291396001600160a01b038516600090815260208190526040902054919063ffffffff61095316565b6001600160a01b038316600090815260208190526040902055600254610c07908263ffffffff610c4f16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610a4483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061095356fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209693701954cf624ebe77e33afd007cf7ed153255e513f83d5daefa05d6b22aeb64736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "103:160:34:-:0;;;138:53;5:9:-1;2:2;;;27:1;24;17:12;2:2;138:53:34;263:132:38;;;;;;;;;;;;;-1:-1:-1;;;263:132:38;;;;;;;;;;;;;;;;-1:-1:-1;;;263:132:38;;;178:2:34;339:4:38;345:6;2087:4:69;2079:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2101:16:69;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2127:9:69;:14;;-1:-1:-1;;2127:14:69;2139:2;2127:14;;;-1:-1:-1;366:24:38::1;381:8:::0;-1:-1:-1;;;;;366:14:38::1;:24:::0;:::i:1;:::-;263:132:::0;;;103:160:34;;10016:88:69;10076:9;:21;;-1:-1:-1;;10076:21:69;;;;;;;;;;;;10016:88::o;103:160:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;103:160:34;;;-1:-1:-1;103:160:34;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "103:160:34:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;103:160:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2213:81:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2213:81:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4249:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4249:166:69;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3256:98;;;:::i;:::-;;;;;;;;;;;;;;;;4875:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4875:317:69;;;;;;;;;;;;;;;;;:::i;225:36:34:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;225:36:34;;:::i;:::-;;3115:81:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5587:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5587:215:69;;;;;;;;:::i;398:81:38:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;398:81:38;;;;;;;;:::i;481:89:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;481:89:70;;:::i;3412:117:69:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3412:117:69;-1:-1:-1;;;;;3412:117:69;;:::i;876:290:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;876:290:70;;;;;;;;:::i;2407:85:69:-;;;:::i;6289:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6289:266:69;;;;;;;;:::i;3732:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3732:172:69;;;;;;;;:::i;194:28:34:-;;;:::i;3962:149:69:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3962:149:69;;;;;;;;;;:::i;2213:81::-;2282:5;2275:12;;;;;;;;-1:-1:-1;;2275:12:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2250:13;;2275:12;;2282:5;;2275:12;;2282:5;2275:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:81;:::o;4249:166::-;4332:4;4348:39;4357:12;:10;:12::i;:::-;4371:7;4380:6;4348:8;:39::i;:::-;-1:-1:-1;4404:4:69;4249:166;;;;:::o;3256:98::-;3335:12;;3256:98;:::o;4875:317::-;4981:4;4997:36;5007:6;5015:9;5026:6;4997:9;:36::i;:::-;5043:121;5052:6;5060:12;:10;:12::i;:::-;5074:89;5112:6;5074:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5074:19:69;;;;;;:11;:19;;;;;;5094:12;:10;:12::i;:::-;-1:-1:-1;;;;;5074:33:69;;;;;;;;;;;;-1:-1:-1;5074:33:69;;;:89;;:37;:89;:::i;:::-;5043:8;:121::i;:::-;-1:-1:-1;5181:4:69;4875:317;;;;;:::o;225:36:34:-;;:::o;3115:81:69:-;3180:9;;;;3115:81;:::o;5587:215::-;5675:4;5691:83;5700:12;:10;:12::i;:::-;5714:7;5723:50;5762:10;5723:11;:25;5735:12;:10;:12::i;:::-;-1:-1:-1;;;;;5723:25:69;;;;;;;;;;;;;;;;;-1:-1:-1;5723:25:69;;;:34;;;;;;;;;;;:50;:38;:50;:::i;398:81:38:-;455:19;461:4;467:6;455:5;:19::i;:::-;398:81;;:::o;481:89:70:-;536:27;542:12;:10;:12::i;:::-;556:6;536:5;:27::i;3412:117:69:-;-1:-1:-1;;;;;3504:18:69;3478:7;3504:18;;;;;;;;;;;;3412:117::o;876:290:70:-;952:26;981:84;1018:6;981:84;;;;;;;;;;;;;;;;;:32;991:7;1000:12;:10;:12::i;:::-;981:9;:32::i;:::-;:36;:84;;:36;:84;:::i;:::-;952:113;;1076:51;1085:7;1094:12;:10;:12::i;:::-;1108:18;1076:8;:51::i;:::-;1137:22;1143:7;1152:6;1137:5;:22::i;:::-;876:290;;;:::o;2407:85:69:-;2478:7;2471:14;;;;;;;;-1:-1:-1;;2471:14:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:13;;2471:14;;2478:7;;2471:14;;2478:7;2471:14;;;;;;;;;;;;;;;;;;;;;;;;6289:266;6382:4;6398:129;6407:12;:10;:12::i;:::-;6421:7;6430:96;6469:15;6430:96;;;;;;;;;;;;;;;;;:11;:25;6442:12;:10;:12::i;:::-;-1:-1:-1;;;;;6430:25:69;;;;;;;;;;;;;;;;;-1:-1:-1;6430:25:69;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3732:172::-;3818:4;3834:42;3844:12;:10;:12::i;:::-;3858:9;3869:6;3834:9;:42::i;194:28:34:-;:::o;3962:149:69:-;-1:-1:-1;;;;;4077:18:69;;;4051:7;4077:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3962:149::o;768:104:65:-;855:10;768:104;:::o;9353:340:69:-;-1:-1:-1;;;;;9454:19:69;;9446:68;;;;-1:-1:-1;;;9446:68:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9532:21:69;;9524:68;;;;-1:-1:-1;;;9524:68:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9603:18:69;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9654:32;;;;;;;;;;;;;;;;;9353:340;;;:::o;7029:530::-;-1:-1:-1;;;;;7134:20:69;;7126:70;;;;-1:-1:-1;;;7126:70:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7214:23:69;;7206:71;;;;-1:-1:-1;;;7206:71:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7288:47;7309:6;7317:9;7328:6;7288:20;:47::i;:::-;7366:71;7388:6;7366:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7366:17:69;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7346:17:69;;;:9;:17;;;;;;;;;;;:91;;;;7470:20;;;;;;;:32;;7495:6;7470:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7447:20:69;;;:9;:20;;;;;;;;;;;;:55;;;;7517:35;;;;;;;7447:20;;7517:35;;;;;;;;;;;;;7029:530;;;:::o;1725:187:68:-;1811:7;1846:12;1838:6;;;;1830:29;;;;-1:-1:-1;;;1830:29:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1830:29:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1881:5:68;;;1725:187::o;867:176::-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;867:176;-1:-1:-1;;;867:176:68:o;7829:370:69:-;-1:-1:-1;;;;;7912:21:69;;7904:65;;;;;-1:-1:-1;;;7904:65:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;7980:49;8009:1;8013:7;8022:6;7980:20;:49::i;:::-;8055:12;;:24;;8072:6;8055:24;:16;:24;:::i;:::-;8040:12;:39;-1:-1:-1;;;;;8110:18:69;;:9;:18;;;;;;;;;;;:30;;8133:6;8110:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8089:18:69;;:9;:18;;;;;;;;;;;:51;;;;8155:37;;;;;;;8089:18;;:9;;8155:37;;;;;;;;;;7829:370;;:::o;8518:410::-;-1:-1:-1;;;;;8601:21:69;;8593:67;;;;-1:-1:-1;;;8593:67:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8671:49;8692:7;8709:1;8713:6;8671:20;:49::i;:::-;8752:68;8775:6;8752:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8752:18:69;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8731:18:69;;:9;:18;;;;;;;;;;:89;8845:12;;:24;;8862:6;8845:24;:16;:24;:::i;:::-;8830:12;:39;8884:37;;;;;;;;8910:1;;-1:-1:-1;;;;;8884:37:69;;;;;;;;;;;;8518:410;;:::o;1307:134:68:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport { TestToken } from \"./TestToken.sol\";\n\ncontract MockWETH is TestToken {\n  constructor() TestToken(\"WETH\", \"WETH\", 18) public {}\n  function deposit() public {}\n  function withdraw(uint256) public {}\n}\n",
  "sourcePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol",
  "ast": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol",
    "exportedSymbols": {
      "MockWETH": [
        8378
      ]
    },
    "id": 8379,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8354,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:34"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol",
        "file": "./TestToken.sol",
        "id": 8356,
        "nodeType": "ImportDirective",
        "scope": 8379,
        "sourceUnit": 8540,
        "src": "57:44:34",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8355,
              "name": "TestToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "66:9:34",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8357,
              "name": "TestToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8539,
              "src": "124:9:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$8539",
                "typeString": "contract TestToken"
              }
            },
            "id": 8358,
            "nodeType": "InheritanceSpecifier",
            "src": "124:9:34"
          }
        ],
        "contractDependencies": [
          8539,
          11835,
          12745,
          12801,
          12879
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8378,
        "linearizedBaseContracts": [
          8378,
          8539,
          12801,
          12745,
          12879,
          11835
        ],
        "name": "MockWETH",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8366,
              "nodeType": "Block",
              "src": "189:2:34",
              "statements": []
            },
            "documentation": null,
            "id": 8367,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "162:6:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "170:6:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "178:2:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 8364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8360,
                  "name": "TestToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8539,
                  "src": "152:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TestToken_$8539_$",
                    "typeString": "type(contract TestToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "152:29:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:2:34"
            },
            "returnParameters": {
              "id": 8365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:34"
            },
            "scope": 8378,
            "src": "138:53:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8370,
              "nodeType": "Block",
              "src": "220:2:34",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "d0e30db0",
            "id": 8371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "210:2:34"
            },
            "returnParameters": {
              "id": 8369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:34"
            },
            "scope": 8378,
            "src": "194:28:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8376,
              "nodeType": "Block",
              "src": "259:2:34",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 8377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8373,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8377,
                  "src": "243:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:9:34"
            },
            "returnParameters": {
              "id": 8375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:34"
            },
            "scope": 8378,
            "src": "225:36:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8379,
        "src": "103:160:34"
      }
    ],
    "src": "32:232:34"
  },
  "legacyAST": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol",
    "exportedSymbols": {
      "MockWETH": [
        8378
      ]
    },
    "id": 8379,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8354,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:34"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol",
        "file": "./TestToken.sol",
        "id": 8356,
        "nodeType": "ImportDirective",
        "scope": 8379,
        "sourceUnit": 8540,
        "src": "57:44:34",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8355,
              "name": "TestToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "66:9:34",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8357,
              "name": "TestToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8539,
              "src": "124:9:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$8539",
                "typeString": "contract TestToken"
              }
            },
            "id": 8358,
            "nodeType": "InheritanceSpecifier",
            "src": "124:9:34"
          }
        ],
        "contractDependencies": [
          8539,
          11835,
          12745,
          12801,
          12879
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8378,
        "linearizedBaseContracts": [
          8378,
          8539,
          12801,
          12745,
          12879,
          11835
        ],
        "name": "MockWETH",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8366,
              "nodeType": "Block",
              "src": "189:2:34",
              "statements": []
            },
            "documentation": null,
            "id": 8367,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "162:6:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "170:6:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "178:2:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 8364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8360,
                  "name": "TestToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8539,
                  "src": "152:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TestToken_$8539_$",
                    "typeString": "type(contract TestToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "152:29:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:2:34"
            },
            "returnParameters": {
              "id": 8365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:34"
            },
            "scope": 8378,
            "src": "138:53:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8370,
              "nodeType": "Block",
              "src": "220:2:34",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "d0e30db0",
            "id": 8371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "210:2:34"
            },
            "returnParameters": {
              "id": 8369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:34"
            },
            "scope": 8378,
            "src": "194:28:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8376,
              "nodeType": "Block",
              "src": "259:2:34",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 8377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8373,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8377,
                  "src": "243:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:9:34"
            },
            "returnParameters": {
              "id": 8375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:34"
            },
            "scope": 8378,
            "src": "225:36:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8379,
        "src": "103:160:34"
      }
    ],
    "src": "32:232:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3ebb4B08b30733773F7025116eFB1A52C57bE928",
      "transactionHash": "0xe967c9794b5c23056412abe58a89ef0188bc72c6a9f10c55a115488af2e27920"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-18T23:55:03.423Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}