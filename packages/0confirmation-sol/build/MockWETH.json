{
  "contractName": "MockWETH",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol\":\"MockWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol\":{\"keccak256\":\"0xe85021bc93486c24002dca0c8a1b265da7b9696831be473e0cb257d0ad175243\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3800c3060355fdb2d8065058af3fce4eb0d3bd0090bb649e2dede0ea707d4e9\",\"dweb:/ipfs/QmZrhYQVHcJz9gxYS6QzGCa68AfBBR7gVwm1HZHghoTigp\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol\":{\"keccak256\":\"0xe5604da8e5fd8a904295368894653c81e61e1cc64f90f6eb84f65f05dc029984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b595ad829f6fdd0843faf370c8909ac54d92d811d7fbe5ffd5a458b473aee0\",\"dweb:/ipfs/QmdXSYCkeSTzke6VQwWYQZWgdGashT5ot8pz9jZGByYrdM\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xcb2cb98b4655b34856045f3f33afed0d4dd6a4425677da6df517d09dd5c9ac92\",\"urls\":[\"bzz-raw://377c7baa8c00dad796eb2b76b79eaadfe2ab91d6d0f378a0cff80d4160903eb8\",\"dweb:/ipfs/QmZV2gwXp3XV24JmnK547JdZ1VVyVoM9LqzqWqfAaxU9aw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051806040016040528060048152602001630ae8aa8960e31b815250604051806040016040528060048152602001630ae8aa8960e31b8152506012828281600390805190602001906100659291906100b9565b5080516100799060049060208401906100b9565b50506005805460ff191660121790555061009b816001600160e01b036100a316565b505050610154565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100fa57805160ff1916838001178555610127565b82800160010185558215610127579182015b8281111561012757825182559160200191906001019061010c565b50610133929150610137565b5090565b61015191905b80821115610133576000815560010161013d565b90565b610e2f806101636000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d71461031e578063a9059cbb1461034a578063d0e30db014610376578063dd62ed3e1461037e57610100565b806342966c68146102a757806370a08231146102c457806379cc6790146102ea57806395d89b411461031657610100565b80632e1a7d4d116100d35780632e1a7d4d14610212578063313ce56714610231578063395093511461024f57806340c10f191461027b57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103ac565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b038135169060200135610442565b604080519115158252519081900360200190f35b6101ca61045f565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610465565b61022f6004803603602081101561022857600080fd5b50356104f2565b005b6102396104f5565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561026557600080fd5b506001600160a01b0381351690602001356104fe565b61022f6004803603604081101561029157600080fd5b506001600160a01b038135169060200135610552565b61022f600480360360208110156102bd57600080fd5b5035610560565b6101ca600480360360208110156102da57600080fd5b50356001600160a01b0316610571565b61022f6004803603604081101561030057600080fd5b506001600160a01b03813516906020013561058c565b61010d6105ec565b6101ae6004803603604081101561033457600080fd5b506001600160a01b03813516906020013561064d565b6101ae6004803603604081101561036057600080fd5b506001600160a01b0381351690602001356106bb565b61022f6106cf565b6101ca6004803603604081101561039457600080fd5b506001600160a01b03813581169160200135166106d1565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b5050505050905090565b600061045661044f6106fc565b8484610700565b50600192915050565b60025490565b60006104728484846107ec565b6104e88461047e6106fc565b6104e385604051806060016040528060288152602001610d1f602891396001600160a01b038a166000908152600160205260408120906104bc6106fc565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61095316565b610700565b5060019392505050565b50565b60055460ff1690565b600061045661050b6106fc565b846104e3856001600061051c6106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6109ea16565b61055c8282610a4b565b5050565b6104f261056b6106fc565b82610b47565b6001600160a01b031660009081526020819052604090205490565b60006105c982604051806060016040528060248152602001610d47602491396105bc866105b76106fc565b6106d1565b919063ffffffff61095316565b90506105dd836105d76106fc565b83610700565b6105e78383610b47565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b600061045661065a6106fc565b846104e385604051806060016040528060258152602001610dd560259139600160006106846106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61095316565b60006104566106c86106fc565b84846107ec565b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166107455760405162461bcd60e51b8152600401808060200182810382526024815260200180610db16024913960400191505060405180910390fd5b6001600160a01b03821661078a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610cd76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108315760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8c6025913960400191505060405180910390fd5b6001600160a01b0382166108765760405162461bcd60e51b8152600401808060200182810382526023815260200180610c926023913960400191505060405180910390fd5b6108818383836105e7565b6108c481604051806060016040528060268152602001610cf9602691396001600160a01b038616600090815260208190526040902054919063ffffffff61095316565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f9908263ffffffff6109ea16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a757818101518382015260200161098f565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a44576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aa6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ab2600083836105e7565b600254610ac5908263ffffffff6109ea16565b6002556001600160a01b038216600090815260208190526040902054610af1908263ffffffff6109ea16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b8c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d6b6021913960400191505060405180910390fd5b610b98826000836105e7565b610bdb81604051806060016040528060228152602001610cb5602291396001600160a01b038516600090815260208190526040902054919063ffffffff61095316565b6001600160a01b038316600090815260208190526040902055600254610c07908263ffffffff610c4f16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610a4483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061095356fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d0449d579a5716d2da5a93e76251a5c76ad88d1c74f837e4c1c43cbcf0b0f48364736f6c63430006080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d71461031e578063a9059cbb1461034a578063d0e30db014610376578063dd62ed3e1461037e57610100565b806342966c68146102a757806370a08231146102c457806379cc6790146102ea57806395d89b411461031657610100565b80632e1a7d4d116100d35780632e1a7d4d14610212578063313ce56714610231578063395093511461024f57806340c10f191461027b57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103ac565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b038135169060200135610442565b604080519115158252519081900360200190f35b6101ca61045f565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610465565b61022f6004803603602081101561022857600080fd5b50356104f2565b005b6102396104f5565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561026557600080fd5b506001600160a01b0381351690602001356104fe565b61022f6004803603604081101561029157600080fd5b506001600160a01b038135169060200135610552565b61022f600480360360208110156102bd57600080fd5b5035610560565b6101ca600480360360208110156102da57600080fd5b50356001600160a01b0316610571565b61022f6004803603604081101561030057600080fd5b506001600160a01b03813516906020013561058c565b61010d6105ec565b6101ae6004803603604081101561033457600080fd5b506001600160a01b03813516906020013561064d565b6101ae6004803603604081101561036057600080fd5b506001600160a01b0381351690602001356106bb565b61022f6106cf565b6101ca6004803603604081101561039457600080fd5b506001600160a01b03813581169160200135166106d1565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b5050505050905090565b600061045661044f6106fc565b8484610700565b50600192915050565b60025490565b60006104728484846107ec565b6104e88461047e6106fc565b6104e385604051806060016040528060288152602001610d1f602891396001600160a01b038a166000908152600160205260408120906104bc6106fc565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61095316565b610700565b5060019392505050565b50565b60055460ff1690565b600061045661050b6106fc565b846104e3856001600061051c6106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6109ea16565b61055c8282610a4b565b5050565b6104f261056b6106fc565b82610b47565b6001600160a01b031660009081526020819052604090205490565b60006105c982604051806060016040528060248152602001610d47602491396105bc866105b76106fc565b6106d1565b919063ffffffff61095316565b90506105dd836105d76106fc565b83610700565b6105e78383610b47565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b600061045661065a6106fc565b846104e385604051806060016040528060258152602001610dd560259139600160006106846106fc565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61095316565b60006104566106c86106fc565b84846107ec565b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166107455760405162461bcd60e51b8152600401808060200182810382526024815260200180610db16024913960400191505060405180910390fd5b6001600160a01b03821661078a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610cd76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108315760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8c6025913960400191505060405180910390fd5b6001600160a01b0382166108765760405162461bcd60e51b8152600401808060200182810382526023815260200180610c926023913960400191505060405180910390fd5b6108818383836105e7565b6108c481604051806060016040528060268152602001610cf9602691396001600160a01b038616600090815260208190526040902054919063ffffffff61095316565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f9908263ffffffff6109ea16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a757818101518382015260200161098f565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a44576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aa6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ab2600083836105e7565b600254610ac5908263ffffffff6109ea16565b6002556001600160a01b038216600090815260208190526040902054610af1908263ffffffff6109ea16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b8c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d6b6021913960400191505060405180910390fd5b610b98826000836105e7565b610bdb81604051806060016040528060228152602001610cb5602291396001600160a01b038516600090815260208190526040902054919063ffffffff61095316565b6001600160a01b038316600090815260208190526040902055600254610c07908263ffffffff610c4f16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610a4483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061095356fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d0449d579a5716d2da5a93e76251a5c76ad88d1c74f837e4c1c43cbcf0b0f48364736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "103:160:33:-:0;;;138:53;5:9:-1;2:2;;;27:1;24;17:12;2:2;138:53:33;263:132:37;;;;;;;;;;;;;-1:-1:-1;;;263:132:37;;;;;;;;;;;;;;;;-1:-1:-1;;;263:132:37;;;178:2:33;339:4:37;345:6;2054:4:68;2046:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2068:16:68;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2094:9:68;:14;;-1:-1:-1;;2094:14:68;2106:2;2094:14;;;-1:-1:-1;366:24:37::1;381:8:::0;-1:-1:-1;;;;;366:14:37::1;:24:::0;:::i:1;:::-;263:132:::0;;;103:160:33;;9983:88:68;10043:9;:21;;-1:-1:-1;;10043:21:68;;;;;;;;;;;;9983:88::o;103:160:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;103:160:33;;;-1:-1:-1;103:160:33;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "103:160:33:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;103:160:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2180:81:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2180:81:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4216:166:68;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3223:98;;;:::i;:::-;;;;;;;;;;;;;;;;4842:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4842:317:68;;;;;;;;;;;;;;;;;:::i;225:36:33:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;225:36:33;;:::i;:::-;;3082:81:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5554:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5554:215:68;;;;;;;;:::i;398:81:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;398:81:37;;;;;;;;:::i;448:89:69:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;448:89:69;;:::i;3379:117:68:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3379:117:68;-1:-1:-1;;;;;3379:117:68;;:::i;843:290:69:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;843:290:69;;;;;;;;:::i;2374:85:68:-;;;:::i;6256:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6256:266:68;;;;;;;;:::i;3699:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3699:172:68;;;;;;;;:::i;194:28:33:-;;;:::i;3929:149:68:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3929:149:68;;;;;;;;;;:::i;2180:81::-;2249:5;2242:12;;;;;;;;-1:-1:-1;;2242:12:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2217:13;;2242:12;;2249:5;;2242:12;;2249:5;2242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81;:::o;4216:166::-;4299:4;4315:39;4324:12;:10;:12::i;:::-;4338:7;4347:6;4315:8;:39::i;:::-;-1:-1:-1;4371:4:68;4216:166;;;;:::o;3223:98::-;3302:12;;3223:98;:::o;4842:317::-;4948:4;4964:36;4974:6;4982:9;4993:6;4964:9;:36::i;:::-;5010:121;5019:6;5027:12;:10;:12::i;:::-;5041:89;5079:6;5041:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5041:19:68;;;;;;:11;:19;;;;;;5061:12;:10;:12::i;:::-;-1:-1:-1;;;;;5041:33:68;;;;;;;;;;;;-1:-1:-1;5041:33:68;;;:89;;:37;:89;:::i;:::-;5010:8;:121::i;:::-;-1:-1:-1;5148:4:68;4842:317;;;;;:::o;225:36:33:-;;:::o;3082:81:68:-;3147:9;;;;3082:81;:::o;5554:215::-;5642:4;5658:83;5667:12;:10;:12::i;:::-;5681:7;5690:50;5729:10;5690:11;:25;5702:12;:10;:12::i;:::-;-1:-1:-1;;;;;5690:25:68;;;;;;;;;;;;;;;;;-1:-1:-1;5690:25:68;;;:34;;;;;;;;;;;:50;:38;:50;:::i;398:81:37:-;455:19;461:4;467:6;455:5;:19::i;:::-;398:81;;:::o;448:89:69:-;503:27;509:12;:10;:12::i;:::-;523:6;503:5;:27::i;3379:117:68:-;-1:-1:-1;;;;;3471:18:68;3445:7;3471:18;;;;;;;;;;;;3379:117::o;843:290:69:-;919:26;948:84;985:6;948:84;;;;;;;;;;;;;;;;;:32;958:7;967:12;:10;:12::i;:::-;948:9;:32::i;:::-;:36;:84;;:36;:84;:::i;:::-;919:113;;1043:51;1052:7;1061:12;:10;:12::i;:::-;1075:18;1043:8;:51::i;:::-;1104:22;1110:7;1119:6;1104:5;:22::i;:::-;843:290;;;:::o;2374:85:68:-;2445:7;2438:14;;;;;;;;-1:-1:-1;;2438:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:13;;2438:14;;2445:7;;2438:14;;2445:7;2438:14;;;;;;;;;;;;;;;;;;;;;;;;6256:266;6349:4;6365:129;6374:12;:10;:12::i;:::-;6388:7;6397:96;6436:15;6397:96;;;;;;;;;;;;;;;;;:11;:25;6409:12;:10;:12::i;:::-;-1:-1:-1;;;;;6397:25:68;;;;;;;;;;;;;;;;;-1:-1:-1;6397:25:68;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3699:172::-;3785:4;3801:42;3811:12;:10;:12::i;:::-;3825:9;3836:6;3801:9;:42::i;194:28:33:-;:::o;3929:149:68:-;-1:-1:-1;;;;;4044:18:68;;;4018:7;4044:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3929:149::o;735:104:64:-;822:10;735:104;:::o;9320:340:68:-;-1:-1:-1;;;;;9421:19:68;;9413:68;;;;-1:-1:-1;;;9413:68:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9499:21:68;;9491:68;;;;-1:-1:-1;;;9491:68:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9570:18:68;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9621:32;;;;;;;;;;;;;;;;;9320:340;;;:::o;6996:530::-;-1:-1:-1;;;;;7101:20:68;;7093:70;;;;-1:-1:-1;;;7093:70:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7181:23:68;;7173:71;;;;-1:-1:-1;;;7173:71:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7255:47;7276:6;7284:9;7295:6;7255:20;:47::i;:::-;7333:71;7355:6;7333:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7333:17:68;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7313:17:68;;;:9;:17;;;;;;;;;;;:91;;;;7437:20;;;;;;;:32;;7462:6;7437:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7414:20:68;;;:9;:20;;;;;;;;;;;;:55;;;;7484:35;;;;;;;7414:20;;7484:35;;;;;;;;;;;;;6996:530;;;:::o;1692:187:67:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:67;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:67:o;7796:370:68:-;-1:-1:-1;;;;;7879:21:68;;7871:65;;;;;-1:-1:-1;;;7871:65:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;7947:49;7976:1;7980:7;7989:6;7947:20;:49::i;:::-;8022:12;;:24;;8039:6;8022:24;:16;:24;:::i;:::-;8007:12;:39;-1:-1:-1;;;;;8077:18:68;;:9;:18;;;;;;;;;;;:30;;8100:6;8077:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8056:18:68;;:9;:18;;;;;;;;;;;:51;;;;8122:37;;;;;;;8056:18;;:9;;8122:37;;;;;;;;;;7796:370;;:::o;8485:410::-;-1:-1:-1;;;;;8568:21:68;;8560:67;;;;-1:-1:-1;;;8560:67:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8638:49;8659:7;8676:1;8680:6;8638:20;:49::i;:::-;8719:68;8742:6;8719:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8719:18:68;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8698:18:68;;:9;:18;;;;;;;;;;:89;8812:12;;:24;;8829:6;8812:24;:16;:24;:::i;:::-;8797:12;:39;8851:37;;;;;;;;8877:1;;-1:-1:-1;;;;;8851:37:68;;;;;;;;;;;;8485:410;;:::o;1274:134:67:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport { TestToken } from \"./TestToken.sol\";\n\ncontract MockWETH is TestToken {\n  constructor() TestToken(\"WETH\", \"WETH\", 18) public {}\n  function deposit() public {}\n  function withdraw(uint256) public {}\n}\n",
  "sourcePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol",
  "ast": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol",
    "exportedSymbols": {
      "MockWETH": [
        8147
      ]
    },
    "id": 8148,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8123,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:33"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol",
        "file": "./TestToken.sol",
        "id": 8125,
        "nodeType": "ImportDirective",
        "scope": 8148,
        "sourceUnit": 8291,
        "src": "57:44:33",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8124,
              "name": "TestToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "66:9:33",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8126,
              "name": "TestToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8290,
              "src": "124:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$8290",
                "typeString": "contract TestToken"
              }
            },
            "id": 8127,
            "nodeType": "InheritanceSpecifier",
            "src": "124:9:33"
          }
        ],
        "contractDependencies": [
          8290,
          11586,
          12496,
          12552,
          12630
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8147,
        "linearizedBaseContracts": [
          8147,
          8290,
          12552,
          12496,
          12630,
          11586
        ],
        "name": "MockWETH",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8135,
              "nodeType": "Block",
              "src": "189:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 8136,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "162:6:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "170:6:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 8132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "178:2:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 8133,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8129,
                  "name": "TestToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8290,
                  "src": "152:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TestToken_$8290_$",
                    "typeString": "type(contract TestToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "152:29:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:2:33"
            },
            "returnParameters": {
              "id": 8134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:33"
            },
            "scope": 8147,
            "src": "138:53:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8139,
              "nodeType": "Block",
              "src": "220:2:33",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "d0e30db0",
            "id": 8140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "210:2:33"
            },
            "returnParameters": {
              "id": 8138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:33"
            },
            "scope": 8147,
            "src": "194:28:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8145,
              "nodeType": "Block",
              "src": "259:2:33",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 8146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8146,
                  "src": "243:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:9:33"
            },
            "returnParameters": {
              "id": 8144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:33"
            },
            "scope": 8147,
            "src": "225:36:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8148,
        "src": "103:160:33"
      }
    ],
    "src": "32:232:33"
  },
  "legacyAST": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/MockWETH.sol",
    "exportedSymbols": {
      "MockWETH": [
        8147
      ]
    },
    "id": 8148,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8123,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:33"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol",
        "file": "./TestToken.sol",
        "id": 8125,
        "nodeType": "ImportDirective",
        "scope": 8148,
        "sourceUnit": 8291,
        "src": "57:44:33",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8124,
              "name": "TestToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "66:9:33",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8126,
              "name": "TestToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8290,
              "src": "124:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$8290",
                "typeString": "contract TestToken"
              }
            },
            "id": 8127,
            "nodeType": "InheritanceSpecifier",
            "src": "124:9:33"
          }
        ],
        "contractDependencies": [
          8290,
          11586,
          12496,
          12552,
          12630
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8147,
        "linearizedBaseContracts": [
          8147,
          8290,
          12552,
          12496,
          12630,
          11586
        ],
        "name": "MockWETH",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8135,
              "nodeType": "Block",
              "src": "189:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 8136,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "162:6:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "57455448",
                    "id": 8131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "170:6:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 8132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "178:2:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 8133,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8129,
                  "name": "TestToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8290,
                  "src": "152:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TestToken_$8290_$",
                    "typeString": "type(contract TestToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "152:29:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:2:33"
            },
            "returnParameters": {
              "id": 8134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:33"
            },
            "scope": 8147,
            "src": "138:53:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8139,
              "nodeType": "Block",
              "src": "220:2:33",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "d0e30db0",
            "id": 8140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "210:2:33"
            },
            "returnParameters": {
              "id": 8138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:33"
            },
            "scope": 8147,
            "src": "194:28:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8145,
              "nodeType": "Block",
              "src": "259:2:33",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 8146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8146,
                  "src": "243:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:9:33"
            },
            "returnParameters": {
              "id": 8144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:33"
            },
            "scope": 8147,
            "src": "225:36:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8148,
        "src": "103:160:33"
      }
    ],
    "src": "32:232:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3ebb4B08b30733773F7025116eFB1A52C57bE928",
      "transactionHash": "0xe967c9794b5c23056412abe58a89ef0188bc72c6a9f10c55a115488af2e27920"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-06T02:04:36.922Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}