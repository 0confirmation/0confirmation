{
  "contractName": "DAI",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for `accounts`'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/DAI.sol\":\"DAI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/DAI.sol\":{\"keccak256\":\"0xb7545276c6add7e22a808abd06d18274428507cd608c0514b3ab5d2bd50efbb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76519f1b3555216dd7edf5bfeb16321629525e026246c5033099389ca9c7e047\",\"dweb:/ipfs/QmV3jwAXZHDqCQUzKZbPvrVhcsjzxcZtjuKNuYJY581nP4\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol\":{\"keccak256\":\"0xa5f86a1a7815c4444aefd4c92fc666da670ab81071da08ce0676d54d978a1e5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c1791ef1e27089819aabb5ddd3525e9549371ab6417cecad6beb3e137adb5ef\",\"dweb:/ipfs/QmbCaNfU1n1cwaJaWtM1cXKRr9y194UW1GSBF12FEaMiKM\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x883e78446376207b044ecb413b6add5d7f7e95e14f5e427e24db637104402b39\",\"urls\":[\"bzz-raw://650237a578466ed9c1a6da601ee5364f9ccec2cc0b418760d1d049f5649a43e1\",\"dweb:/ipfs/QmZnZpL9fb3Sk7FCWpvzVt3oaEpaNT9MDXDnMHYmEgVedf\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa7f98d0a7bb983c910b4c935bd89c81d74e98b67c58f27a735f11f46be2c06f7\",\"urls\":[\"bzz-raw://fa59355a45568cb481ba390ed6aeaec74b19c24295165eaf5aa9378c162a8443\",\"dweb:/ipfs/QmNUJr4xpwvAdgqXZzVSeL7AUPW443k5uHqy8YGuEfAMZt\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x8e5e5ba56ec398e1f5dd1b3c92b604f5d7509adedd67cb64ec99b6032603aaf1\",\"urls\":[\"bzz-raw://dedc4142af588d22fce563a0c94b11d2ef72e8960488175d1e285dfead8866eb\",\"dweb:/ipfs/Qmbaka9k33fbw1iirt4aYZtJvmFUjq23feuwreTEG7djqU\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600381526020016244414960e81b8152506040518060400160405280600381526020016244414960e81b8152506012828281600390805190602001906200006692919062000159565b5080516200007c90600490602084019062000159565b50506005805460ff1916601217905550620000a0816001600160e01b03620000a916565b505050620001fe565b620000c8306001600160a01b03166200011c60201b620006bf1760201c565b15620001065760405162461bcd60e51b81526004018080602001828103825260348152602001806200103c6034913960400191505060405180910390fd5b6005805460ff191660ff92909216919091179055565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200015157508115155b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200019c57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cc578251825591602001919060010190620001af565b50620001da929150620001de565b5090565b620001fb91905b80821115620001da5760008155600101620001e5565b90565b610e2e806200020e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146102e3578063a457c2d7146102eb578063a9059cbb14610317578063dd62ed3e14610343576100ea565b806342966c681461027457806370a082311461029157806379cc6790146102b7576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc578063395093511461021a57806340c10f1914610246576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610371565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610407565b604080519115158252519081900360200190f35b6101b4610424565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b0381358116916020810135909116906040013561042a565b6102046104b7565b6040805160ff9092168252519081900360200190f35b6101986004803603604081101561023057600080fd5b506001600160a01b0381351690602001356104c0565b6102726004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610514565b005b6102726004803603602081101561028a57600080fd5b5035610522565b6101b4600480360360208110156102a757600080fd5b50356001600160a01b0316610536565b610272600480360360408110156102cd57600080fd5b506001600160a01b038135169060200135610551565b6100f76105b1565b6101986004803603604081101561030157600080fd5b506001600160a01b038135169060200135610612565b6101986004803603604081101561032d57600080fd5b506001600160a01b038135169060200135610680565b6101b46004803603604081101561035957600080fd5b506001600160a01b0381358116916020013516610694565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b5050505050905090565b600061041b6104146106fb565b84846106ff565b50600192915050565b60025490565b60006104378484846107eb565b6104ad846104436106fb565b6104a885604051806060016040528060288152602001610d1e602891396001600160a01b038a166000908152600160205260408120906104816106fb565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61095216565b6106ff565b5060019392505050565b60055460ff1690565b600061041b6104cd6106fb565b846104a885600160006104de6106fb565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6109e916565b61051e8282610a4a565b5050565b61053361052d6106fb565b82610b46565b50565b6001600160a01b031660009081526020819052604090205490565b600061058e82604051806060016040528060248152602001610d46602491396105818661057c6106fb565b610694565b919063ffffffff61095216565b90506105a28361059c6106fb565b836106ff565b6105ac8383610b46565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103fd5780601f106103d2576101008083540402835291602001916103fd565b600061041b61061f6106fb565b846104a885604051806060016040528060258152602001610dd460259139600160006106496106fb565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61095216565b600061041b61068d6106fb565b84846107eb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906106f357508115155b949350505050565b3390565b6001600160a01b0383166107445760405162461bcd60e51b8152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b6001600160a01b0382166107895760405162461bcd60e51b8152600401808060200182810382526022815260200180610cd66022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108305760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8b6025913960400191505060405180910390fd5b6001600160a01b0382166108755760405162461bcd60e51b8152600401808060200182810382526023815260200180610c916023913960400191505060405180910390fd5b6108808383836105ac565b6108c381604051806060016040528060268152602001610cf8602691396001600160a01b038616600090815260208190526040902054919063ffffffff61095216565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f8908263ffffffff6109e916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109e15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a657818101518382015260200161098e565b50505050905090810190601f1680156109d35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a43576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aa5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ab1600083836105ac565b600254610ac4908263ffffffff6109e916565b6002556001600160a01b038216600090815260208190526040902054610af0908263ffffffff6109e916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b8b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d6a6021913960400191505060405180910390fd5b610b97826000836105ac565b610bda81604051806060016040528060228152602001610cb4602291396001600160a01b038516600090815260208190526040902054919063ffffffff61095216565b6001600160a01b038316600090815260208190526040902055600254610c06908263ffffffff610c4e16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610a4383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061095256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122011845b7e1b971418b324c88e921b062addc4843353be4d6088c50a5f0c15ef8b64736f6c6343000608003345524332303a20646563696d616c732063616e6e6f74206265206368616e67656420616674657220636f6e737472756374696f6e",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146102e3578063a457c2d7146102eb578063a9059cbb14610317578063dd62ed3e14610343576100ea565b806342966c681461027457806370a082311461029157806379cc6790146102b7576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc578063395093511461021a57806340c10f1914610246576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610371565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610407565b604080519115158252519081900360200190f35b6101b4610424565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b0381358116916020810135909116906040013561042a565b6102046104b7565b6040805160ff9092168252519081900360200190f35b6101986004803603604081101561023057600080fd5b506001600160a01b0381351690602001356104c0565b6102726004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610514565b005b6102726004803603602081101561028a57600080fd5b5035610522565b6101b4600480360360208110156102a757600080fd5b50356001600160a01b0316610536565b610272600480360360408110156102cd57600080fd5b506001600160a01b038135169060200135610551565b6100f76105b1565b6101986004803603604081101561030157600080fd5b506001600160a01b038135169060200135610612565b6101986004803603604081101561032d57600080fd5b506001600160a01b038135169060200135610680565b6101b46004803603604081101561035957600080fd5b506001600160a01b0381358116916020013516610694565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b5050505050905090565b600061041b6104146106fb565b84846106ff565b50600192915050565b60025490565b60006104378484846107eb565b6104ad846104436106fb565b6104a885604051806060016040528060288152602001610d1e602891396001600160a01b038a166000908152600160205260408120906104816106fb565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61095216565b6106ff565b5060019392505050565b60055460ff1690565b600061041b6104cd6106fb565b846104a885600160006104de6106fb565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6109e916565b61051e8282610a4a565b5050565b61053361052d6106fb565b82610b46565b50565b6001600160a01b031660009081526020819052604090205490565b600061058e82604051806060016040528060248152602001610d46602491396105818661057c6106fb565b610694565b919063ffffffff61095216565b90506105a28361059c6106fb565b836106ff565b6105ac8383610b46565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103fd5780601f106103d2576101008083540402835291602001916103fd565b600061041b61061f6106fb565b846104a885604051806060016040528060258152602001610dd460259139600160006106496106fb565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61095216565b600061041b61068d6106fb565b84846107eb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906106f357508115155b949350505050565b3390565b6001600160a01b0383166107445760405162461bcd60e51b8152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b6001600160a01b0382166107895760405162461bcd60e51b8152600401808060200182810382526022815260200180610cd66022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108305760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8b6025913960400191505060405180910390fd5b6001600160a01b0382166108755760405162461bcd60e51b8152600401808060200182810382526023815260200180610c916023913960400191505060405180910390fd5b6108808383836105ac565b6108c381604051806060016040528060268152602001610cf8602691396001600160a01b038616600090815260208190526040902054919063ffffffff61095216565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f8908263ffffffff6109e916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109e15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a657818101518382015260200161098e565b50505050905090810190601f1680156109d35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a43576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aa5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ab1600083836105ac565b600254610ac4908263ffffffff6109e916565b6002556001600160a01b038216600090815260208190526040902054610af0908263ffffffff6109e916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b8b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d6a6021913960400191505060405180910390fd5b610b97826000836105ac565b610bda81604051806060016040528060228152602001610cb4602291396001600160a01b038516600090815260208190526040902054919063ffffffff61095216565b6001600160a01b038316600090815260208190526040902055600254610c06908263ffffffff610c4e16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610a4383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061095256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122011845b7e1b971418b324c88e921b062addc4843353be4d6088c50a5f0c15ef8b64736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "103:83:32:-:0;;;133:51;5:9:-1;2:2;;;27:1;24;17:12;2:2;133:51:32;279:132:36;;;;;;;;;;;;;-1:-1:-1;;;279:132:36;;;;;;;;;;;;;;;;-1:-1:-1;;;279:132:36;;;171:2:32;355:4:36;361:6;2050:4:69;2042:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2064:16:69;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2090:9:69;:14;;-1:-1:-1;;2090:14:69;2102:2;2090:14;;;-1:-1:-1;382:24:36::1;397:8:::0;-1:-1:-1;;;;;382:14:36::1;:24:::0;:::i:1;:::-;279:132:::0;;;103:83:32;;9846:190:69;9915:26;9923:4;-1:-1:-1;;;;;9915:24:69;;;;;;:26;;:::i;:::-;9914:27;9906:92;;;;-1:-1:-1;;;9906:92:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10008:9;:21;;-1:-1:-1;;10008:21:69;;;;;;;;;;;;9846:190::o;685:610:73:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:73;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:73:o;103:83:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;103:83:32;;;-1:-1:-1;103:83:32;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "103:83:32:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;103:83:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2176:81:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2176:81:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4212:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4212:166:69;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3219:98;;;:::i;:::-;;;;;;;;;;;;;;;;4836:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4836:317:69;;;;;;;;;;;;;;;;;:::i;3078:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5548:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5548:215:69;;;;;;;;:::i;414:81:36:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;414:81:36;;;;;;;;:::i;:::-;;448:89:70;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;448:89:70;;:::i;3375:117:69:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3375:117:69;-1:-1:-1;;;;;3375:117:69;;:::i;841:290:70:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;841:290:70;;;;;;;;:::i;2370:85:69:-;;;:::i;6250:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6250:266:69;;;;;;;;:::i;3695:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3695:172:69;;;;;;;;:::i;3925:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3925:149:69;;;;;;;;;;:::i;2176:81::-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2176:81;:::o;4212:166::-;4295:4;4311:39;4320:12;:10;:12::i;:::-;4334:7;4343:6;4311:8;:39::i;:::-;-1:-1:-1;4367:4:69;4212:166;;;;:::o;3219:98::-;3298:12;;3219:98;:::o;4836:317::-;4942:4;4958:36;4968:6;4976:9;4987:6;4958:9;:36::i;:::-;5004:121;5013:6;5021:12;:10;:12::i;:::-;5035:89;5073:6;5035:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5035:19:69;;;;;;:11;:19;;;;;;5055:12;:10;:12::i;:::-;-1:-1:-1;;;;;5035:33:69;;;;;;;;;;;;-1:-1:-1;5035:33:69;;;:89;;:37;:89;:::i;:::-;5004:8;:121::i;:::-;-1:-1:-1;5142:4:69;4836:317;;;;;:::o;3078:81::-;3143:9;;;;3078:81;:::o;5548:215::-;5636:4;5652:83;5661:12;:10;:12::i;:::-;5675:7;5684:50;5723:10;5684:11;:25;5696:12;:10;:12::i;:::-;-1:-1:-1;;;;;5684:25:69;;;;;;;;;;;;;;;;;-1:-1:-1;5684:25:69;;;:34;;;;;;;;;;;:50;:38;:50;:::i;414:81:36:-;471:19;477:4;483:6;471:5;:19::i;:::-;414:81;;:::o;448:89:70:-;503:27;509:12;:10;:12::i;:::-;523:6;503:5;:27::i;:::-;448:89;:::o;3375:117:69:-;-1:-1:-1;;;;;3467:18:69;3441:7;3467:18;;;;;;;;;;;;3375:117::o;841:290:70:-;917:26;946:84;983:6;946:84;;;;;;;;;;;;;;;;;:32;956:7;965:12;:10;:12::i;:::-;946:9;:32::i;:::-;:36;:84;;:36;:84;:::i;:::-;917:113;;1041:51;1050:7;1059:12;:10;:12::i;:::-;1073:18;1041:8;:51::i;:::-;1102:22;1108:7;1117:6;1102:5;:22::i;:::-;841:290;;;:::o;2370:85:69:-;2441:7;2434:14;;;;;;;;-1:-1:-1;;2434:14:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:13;;2434:14;;2441:7;;2434:14;;2441:7;2434:14;;;;;;;;;;;;;;;;;;;;;;;;6250:266;6343:4;6359:129;6368:12;:10;:12::i;:::-;6382:7;6391:96;6430:15;6391:96;;;;;;;;;;;;;;;;;:11;:25;6403:12;:10;:12::i;:::-;-1:-1:-1;;;;;6391:25:69;;;;;;;;;;;;;;;;;-1:-1:-1;6391:25:69;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3695:172::-;3781:4;3797:42;3807:12;:10;:12::i;:::-;3821:9;3832:6;3797:9;:42::i;3925:149::-;-1:-1:-1;;;;;4040:18:69;;;4014:7;4040:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3925:149::o;685:610:73:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:73;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:73:o;735:104:65:-;822:10;735:104;:::o;9314:340:69:-;-1:-1:-1;;;;;9415:19:69;;9407:68;;;;-1:-1:-1;;;9407:68:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9493:21:69;;9485:68;;;;-1:-1:-1;;;9485:68:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9564:18:69;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9615:32;;;;;;;;;;;;;;;;;9314:340;;;:::o;6990:530::-;-1:-1:-1;;;;;7095:20:69;;7087:70;;;;-1:-1:-1;;;7087:70:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7175:23:69;;7167:71;;;;-1:-1:-1;;;7167:71:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7249:47;7270:6;7278:9;7289:6;7249:20;:47::i;:::-;7327:71;7349:6;7327:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:17:69;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7307:17:69;;;:9;:17;;;;;;;;;;;:91;;;;7431:20;;;;;;;:32;;7456:6;7431:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7408:20:69;;;:9;:20;;;;;;;;;;;;:55;;;;7478:35;;;;;;;7408:20;;7478:35;;;;;;;;;;;;;6990:530;;;:::o;1692:187:68:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:68;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:68:o;7790:370:69:-;-1:-1:-1;;;;;7873:21:69;;7865:65;;;;;-1:-1:-1;;;7865:65:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:12;;:24;;8033:6;8016:24;:16;:24;:::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:69;;:9;:18;;;;;;;;;;;:30;;8094:6;8071:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8050:18:69;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;8479:410::-;-1:-1:-1;;;;;8562:21:69;;8554:67;;;;-1:-1:-1;;;8554:67:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8632:49;8653:7;8670:1;8674:6;8632:20;:49::i;:::-;8713:68;8736:6;8713:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8713:18:69;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8692:18:69;;:9;:18;;;;;;;;;;:89;8806:12;;:24;;8823:6;8806:24;:16;:24;:::i;:::-;8791:12;:39;8845:37;;;;;;;;8871:1;;-1:-1:-1;;;;;8845:37:69;;;;;;;;;;;;8479:410;;:::o;1274:134:68:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport { TestToken } from \"./TestToken.sol\";\n\ncontract DAI is TestToken {\n  constructor() TestToken(\"DAI\", \"DAI\", 18) public {}\n}\n",
  "sourcePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/DAI.sol",
  "ast": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/DAI.sol",
    "exportedSymbols": {
      "DAI": [
        7719
      ]
    },
    "id": 7720,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7705,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:32"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol",
        "file": "./TestToken.sol",
        "id": 7707,
        "nodeType": "ImportDirective",
        "scope": 7720,
        "sourceUnit": 7863,
        "src": "57:44:32",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 7706,
              "name": "TestToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "66:9:32",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7708,
              "name": "TestToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7862,
              "src": "119:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$7862",
                "typeString": "contract TestToken"
              }
            },
            "id": 7709,
            "nodeType": "InheritanceSpecifier",
            "src": "119:9:32"
          }
        ],
        "contractDependencies": [
          7862,
          12036,
          12957,
          13013,
          13154
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7719,
        "linearizedBaseContracts": [
          7719,
          7862,
          13013,
          12957,
          13154,
          12036
        ],
        "name": "DAI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7717,
              "nodeType": "Block",
              "src": "182:2:32",
              "statements": []
            },
            "documentation": null,
            "id": 7718,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 7712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "157:5:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 7713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "164:5:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 7714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "171:2:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 7715,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7711,
                  "name": "TestToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7862,
                  "src": "147:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TestToken_$7862_$",
                    "typeString": "type(contract TestToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "147:27:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "144:2:32"
            },
            "returnParameters": {
              "id": 7716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:32"
            },
            "scope": 7719,
            "src": "133:51:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7720,
        "src": "103:83:32"
      }
    ],
    "src": "32:155:32"
  },
  "legacyAST": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/DAI.sol",
    "exportedSymbols": {
      "DAI": [
        7719
      ]
    },
    "id": 7720,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7705,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:32"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/TestToken.sol",
        "file": "./TestToken.sol",
        "id": 7707,
        "nodeType": "ImportDirective",
        "scope": 7720,
        "sourceUnit": 7863,
        "src": "57:44:32",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 7706,
              "name": "TestToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "66:9:32",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7708,
              "name": "TestToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7862,
              "src": "119:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestToken_$7862",
                "typeString": "contract TestToken"
              }
            },
            "id": 7709,
            "nodeType": "InheritanceSpecifier",
            "src": "119:9:32"
          }
        ],
        "contractDependencies": [
          7862,
          12036,
          12957,
          13013,
          13154
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7719,
        "linearizedBaseContracts": [
          7719,
          7862,
          13013,
          12957,
          13154,
          12036
        ],
        "name": "DAI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7717,
              "nodeType": "Block",
              "src": "182:2:32",
              "statements": []
            },
            "documentation": null,
            "id": 7718,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 7712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "157:5:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "444149",
                    "id": 7713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "164:5:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                      "typeString": "literal_string \"DAI\""
                    },
                    "value": "DAI"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 7714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "171:2:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 7715,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7711,
                  "name": "TestToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7862,
                  "src": "147:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TestToken_$7862_$",
                    "typeString": "type(contract TestToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "147:27:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "144:2:32"
            },
            "returnParameters": {
              "id": 7716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:32"
            },
            "scope": 7719,
            "src": "133:51:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7720,
        "src": "103:83:32"
      }
    ],
    "src": "32:155:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-05-24T20:09:32.092Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for `accounts`'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}