{
  "contractName": "ShifterRegistryMock",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getShifterByToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shifter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getShifterByToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shifter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterRegistryMock.sol\":\"ShifterRegistryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterERC20Mock.sol\":{\"keccak256\":\"0x55b2f0e8fb7b3784e78e9752c0073045a5cb15bfbbde834cec88551771eb9737\",\"urls\":[\"bzz-raw://19a17d3db9b9cc84850056c6f5c03c21b4f1d00ef9e29311d63072b4e3a1a1b7\",\"dweb:/ipfs/Qmc77Qjotajcnk1Tjs5XtmRi5gDXxZCN8F956Tso2JxBRQ\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterMock.sol\":{\"keccak256\":\"0x39ff3bd6cbcf2d632fef177c07b316488df6b2f3791a1dc96158e9a25e89755e\",\"urls\":[\"bzz-raw://ea6710fc99a4a5fedfeda887cb092c620bbf21e009298640145ef947f8bf1ae7\",\"dweb:/ipfs/QmQE5D98Y3oxGqbAj2KLT1a4VUXhQjy1xqfk3UmzWVL2Mu\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterRegistryMock.sol\":{\"keccak256\":\"0x171c2cacdf8181a60493f4869fd5160fb1c9cac7dc200e3359234043427a298c\",\"urls\":[\"bzz-raw://657d2b629eef146ae1f5462cd208d10f3710f8e8c423eeb542b791d4951d9408\",\"dweb:/ipfs/QmQSiQFfkRaneETmfPq9m2zP2Nhw8ty7a4LJZhPepTXmGv\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x90c70e6fbcedfd9aa2a5dbafdd5d77a510e5615da19b4009acd4a4f0c8bd5b6d\",\"urls\":[\"bzz-raw://49ba8557fdfb4ff8683f6d4057f39655447e432659ae58d568f12869599a4650\",\"dweb:/ipfs/QmaE2D7Z72nxeEwXZCaaqhdhQALFoMwU9AURJXJw1w8XEf\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x060d944bc6f17414d07853a46d056bf594e5b3a7899e0e76b4520cdbe384e231\",\"urls\":[\"bzz-raw://5142118f78f0ea251eabf2d6688a04027898cb1ddfa885e27f781a2fde3a7a86\",\"dweb:/ipfs/QmQjAwm2oREFKkBEZDVod5LVPJ11ucgswnPFoZ1sZwYpTH\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806328c4f41014610046578063707ed02b146100ca578063fc0c546a14610114575b600080fd5b6100886004803603602081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061015e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100d2610191565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61011c6101b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea26469706673582212207af22def55b69ce8feff19a98b323d0432a5ad1be09e7cea7c54a2ef67f0987d64736f6c63430006030033",
  "sourceMap": "75:292:23:-:0;;;215:150;5:9:-1;2:2;;;27:1;24;17:12;2:2;215:150:23;260:17;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;260:17:23;242:7;;:36;;;;;;;;;;;;;;;;;;304:7;;;;;;;;;;;292:26;;;:28;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;292:28:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;292:28:23;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;292:28:23;;;;;;;;;;;;;;;;284:5;;:36;;;;;;;;;;;;;;;;;;353:7;;;;;;;;;;;326:17;:24;344:5;;;;;;;;;;;326:24;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;75:292;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "75:292:23:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;75:292:23;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;108:53:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;108:53:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;189:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;165:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;108:53;;;;;;;;;;;;;;;;;;;;;;:::o;189:22::-;;;;;;;;;;;;;:::o;165:20::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.3;\n\nimport { ShifterMock } from \"./ShifterMock.sol\";\n\ncontract ShifterRegistryMock {\n  mapping (address => address) public getShifterByToken;\n  address public token;\n  address public shifter;\n  constructor() public {\n    shifter = address(new ShifterMock());\n    token = ShifterMock(shifter).token();\n    getShifterByToken[token] = shifter;\n  }\n}\n",
  "sourcePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterRegistryMock.sol",
  "ast": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterRegistryMock.sol",
    "exportedSymbols": {
      "ShifterRegistryMock": [
        4854
      ]
    },
    "id": 4855,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4816,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterMock.sol",
        "file": "./ShifterMock.sol",
        "id": 4818,
        "nodeType": "ImportDirective",
        "scope": 4855,
        "sourceUnit": 4815,
        "src": "25:48:23",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4817,
              "name": "ShifterMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "34:11:23",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          4814
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4854,
        "linearizedBaseContracts": [
          4854
        ],
        "name": "ShifterRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "28c4f410",
            "id": 4822,
            "name": "getShifterByToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4854,
            "src": "108:53:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 4821,
              "keyType": {
                "id": 4819,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "117:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "108:28:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4820,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 4824,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4854,
            "src": "165:20:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4823,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "165:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "707ed02b",
            "id": 4826,
            "name": "shifter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4854,
            "src": "189:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4825,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4852,
              "nodeType": "Block",
              "src": "236:129:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4829,
                      "name": "shifter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "242:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "260:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ShifterMock_$4814_$",
                              "typeString": "function () returns (contract ShifterMock)"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 4832,
                              "name": "ShifterMock",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 4814,
                              "src": "264:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ShifterMock_$4814",
                                "typeString": "contract ShifterMock"
                              }
                            }
                          },
                          "id": 4834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "260:17:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ShifterMock_$4814",
                            "typeString": "contract ShifterMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ShifterMock_$4814",
                            "typeString": "contract ShifterMock"
                          }
                        ],
                        "id": 4831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:26:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "242:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4837,
                  "nodeType": "ExpressionStatement",
                  "src": "242:36:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4838,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4824,
                      "src": "284:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4840,
                              "name": "shifter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4826,
                              "src": "304:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4839,
                            "name": "ShifterMock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4814,
                            "src": "292:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ShifterMock_$4814_$",
                              "typeString": "type(contract ShifterMock)"
                            }
                          },
                          "id": 4841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ShifterMock_$4814",
                            "typeString": "contract ShifterMock"
                          }
                        },
                        "id": 4842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4775,
                        "src": "292:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 4843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "292:28:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "284:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4845,
                  "nodeType": "ExpressionStatement",
                  "src": "284:36:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4846,
                        "name": "getShifterByToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4822,
                        "src": "326:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4848,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4847,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4824,
                        "src": "344:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "326:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4849,
                      "name": "shifter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "353:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "326:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4851,
                  "nodeType": "ExpressionStatement",
                  "src": "326:34:23"
                }
              ]
            },
            "documentation": null,
            "id": 4853,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:2:23"
            },
            "returnParameters": {
              "id": 4828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:0:23"
            },
            "scope": 4854,
            "src": "215:150:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4855,
        "src": "75:292:23"
      }
    ],
    "src": "0:368:23"
  },
  "legacyAST": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterRegistryMock.sol",
    "exportedSymbols": {
      "ShifterRegistryMock": [
        4854
      ]
    },
    "id": 4855,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4816,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/mock/ShifterMock.sol",
        "file": "./ShifterMock.sol",
        "id": 4818,
        "nodeType": "ImportDirective",
        "scope": 4855,
        "sourceUnit": 4815,
        "src": "25:48:23",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4817,
              "name": "ShifterMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "34:11:23",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          4814
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4854,
        "linearizedBaseContracts": [
          4854
        ],
        "name": "ShifterRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "28c4f410",
            "id": 4822,
            "name": "getShifterByToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4854,
            "src": "108:53:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 4821,
              "keyType": {
                "id": 4819,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "117:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "108:28:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4820,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 4824,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4854,
            "src": "165:20:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4823,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "165:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "707ed02b",
            "id": 4826,
            "name": "shifter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4854,
            "src": "189:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4825,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4852,
              "nodeType": "Block",
              "src": "236:129:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4829,
                      "name": "shifter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "242:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "260:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ShifterMock_$4814_$",
                              "typeString": "function () returns (contract ShifterMock)"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 4832,
                              "name": "ShifterMock",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 4814,
                              "src": "264:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ShifterMock_$4814",
                                "typeString": "contract ShifterMock"
                              }
                            }
                          },
                          "id": 4834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "260:17:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ShifterMock_$4814",
                            "typeString": "contract ShifterMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ShifterMock_$4814",
                            "typeString": "contract ShifterMock"
                          }
                        ],
                        "id": 4831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:26:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "242:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4837,
                  "nodeType": "ExpressionStatement",
                  "src": "242:36:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4838,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4824,
                      "src": "284:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4840,
                              "name": "shifter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4826,
                              "src": "304:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4839,
                            "name": "ShifterMock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4814,
                            "src": "292:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ShifterMock_$4814_$",
                              "typeString": "type(contract ShifterMock)"
                            }
                          },
                          "id": 4841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ShifterMock_$4814",
                            "typeString": "contract ShifterMock"
                          }
                        },
                        "id": 4842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4775,
                        "src": "292:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 4843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "292:28:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "284:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4845,
                  "nodeType": "ExpressionStatement",
                  "src": "284:36:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4846,
                        "name": "getShifterByToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4822,
                        "src": "326:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4848,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4847,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4824,
                        "src": "344:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "326:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4849,
                      "name": "shifter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "353:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "326:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4851,
                  "nodeType": "ExpressionStatement",
                  "src": "326:34:23"
                }
              ]
            },
            "documentation": null,
            "id": 4853,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:2:23"
            },
            "returnParameters": {
              "id": 4828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:0:23"
            },
            "scope": 4854,
            "src": "215:150:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4855,
        "src": "75:292:23"
      }
    ],
    "src": "0:368:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.3+commit.8dda9521.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-02T22:57:31.463Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}