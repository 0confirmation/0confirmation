{
  "contractName": "PortfolioReaderView",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "moduleAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "balanceQueries",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "sourceAddress",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct TokenQueryLib.ApprovalQueryPayload[]",
              "name": "approvalQueries",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct TokenQueryLib.TokenQueryPayload",
          "name": "query",
          "type": "tuple"
        }
      ],
      "name": "render",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "token",
              "type": "address"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult",
                  "name": "name",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult",
                  "name": "symbol",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult",
                  "name": "decimals",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult[]",
                  "name": "balanceQueryResults",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult[]",
                  "name": "approvalQueryResults",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TokenQueryLib.TokenQueryResult",
              "name": "data",
              "type": "tuple"
            }
          ],
          "internalType": "struct PortfolioReaderViewLib.PortfolioEntry[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"balanceQueries\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sourceAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct TokenQueryLib.ApprovalQueryPayload[]\",\"name\":\"approvalQueries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TokenQueryLib.TokenQueryPayload\",\"name\":\"query\",\"type\":\"tuple\"}],\"name\":\"render\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult\",\"name\":\"name\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult\",\"name\":\"symbol\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult\",\"name\":\"decimals\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult[]\",\"name\":\"balanceQueryResults\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult[]\",\"name\":\"approvalQueryResults\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TokenQueryLib.TokenQueryResult\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct PortfolioReaderViewLib.PortfolioEntry[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol\":\"PortfolioReaderView\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/BorrowProxyLib.sol\":{\"keccak256\":\"0xf400f46ae1bae80e8ee1fa3ef7840c7bf749614c691a627e1c95bad25a56aca3\",\"urls\":[\"bzz-raw://aea33c7da8156b05a7f659de560a47406f6094a645e7ebd83ea35c71d188c8f2\",\"dweb:/ipfs/QmcXdPUDwVrn1xCUf8SF1VMqqtwVhfPYMyms5V8Uhebw7i\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/adapters/liquidity/SimpleBurnLiquidationModule.sol\":{\"keccak256\":\"0xbc8adab64686c1f2822dc0e263f2079bc63775587ed0d329c26436617740d8a2\",\"urls\":[\"bzz-raw://721e44bd68ff3e3ea15edddb2687b82ddcfed8c66e184ef41972aa3cbc832d78\",\"dweb:/ipfs/QmTWLcoByt4PJzKz6qd8L4uK4obM35kY8dasWjn8g1AcpU\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/adapters/liquidity/SimpleBurnLiquidationModuleLib.sol\":{\"keccak256\":\"0x87fb2e9c990bfb7ce8af67760c68345ac53183c852aefe4a4549ac3809e6f6f5\",\"urls\":[\"bzz-raw://eb04de1fe1463da717ca28847cbbe6b17e4cfddc517a9c69219e2f02838814fe\",\"dweb:/ipfs/Qma51gVXQYgphcRqT9BDgXNsrWoX13g79gbXTDuq6KCDj8\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IModuleRegistryProvider.sol\":{\"keccak256\":\"0x323694de5c0321dc486110c4c6fe1351b0e1aff63c29411b7bcb7e5335b57553\",\"urls\":[\"bzz-raw://148c4f3f6752e1dbf667d572a3fc6303ea732f895fb7f6c215f8697fdd745409\",\"dweb:/ipfs/QmeoLmnhkzvhMarZVzhKUbfyUpJtoPpGDAxi9ZpbGoxyz9\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IUniswapExchange.sol\":{\"keccak256\":\"0x8e9368ea10a0b93e689cca3745c4c5617278593dca28462a3119ba02db3064e9\",\"urls\":[\"bzz-raw://261dd24d27033baffa61a93679e3ec089b6b9fcbf9e9faf588407ac46624854b\",\"dweb:/ipfs/QmZjcSenpLGBTeEch2bzZcYiV11aEePaumMcWKTrRzJwQ4\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IUniswapFactory.sol\":{\"keccak256\":\"0xfe87841a967a040b3b33ba1b5671a854fbda69a05bd83d97393c1c902493368a\",\"urls\":[\"bzz-raw://24eb78bc28b3b12393c22eef92fd7a049ab1b4fbe779e5612f38741f24ac1fe6\",\"dweb:/ipfs/QmdP9JrknP7RBS5NLMfBKrRG4ud8Ydsatk2Zsk8crXCDxP\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol\":{\"keccak256\":\"0xe35a8523956f2bd9d15e20a1badbaaf530384ac159e187b5e72a229374e2aab4\",\"urls\":[\"bzz-raw://f4183fdd0f9acf1a8ec15969dd247b2f2e28049dc48a97c5a3627d41c52d5656\",\"dweb:/ipfs/QmXkcUFZ1S79WCNpQffdwGFX8bLvsZbkbhD4GpWw7iUBas\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderViewLib.sol\":{\"keccak256\":\"0x294af2bd92d67b65e0de5ca78bb261bb76992ba8b738eba52f2ce516909c4dbf\",\"urls\":[\"bzz-raw://02bcb299ed25bda5fef248a7a3d069041d7192c2284304d5b271729bc0e0cf3c\",\"dweb:/ipfs/QmXtVzQgpzfid8LWHqk5MyT4Jsm8nrZZeMwkHrTaV6uF75\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/token/TokenQueryLib.sol\":{\"keccak256\":\"0xa9a9000ad5141d8f0a8be53cc562b38c33eaf1c742e424143c37b28752eb0864\",\"urls\":[\"bzz-raw://97cfd85b007b9b5b49736859ecfd064cb270a44318312d553ea1c9a795808065\",\"dweb:/ipfs/QmZ1DVDMdJ5kK5o59oNmbzUvWBUBh8N5NNLCyLiKKf5865\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/AddressSetLib.sol\":{\"keccak256\":\"0x8e812abd524cc21d80f8ffd17ba5fb8037e55d0e49972d5a90a1e38d370a4960\",\"urls\":[\"bzz-raw://95fbb61cf4110aeff7e7cd071c5af318a41391190143cd34e6c741913dd2d72d\",\"dweb:/ipfs/QmWbA24vYSneAjRR2JDKe5wUKFcv7L6v3GFtR23wD8UXvd\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/TokenUtils.sol\":{\"keccak256\":\"0x223ffa210b27de19c0fa9c90be0c487beed8451cfacf17c4da56d74d9ebe0280\",\"urls\":[\"bzz-raw://cb05f7f27426001551242725b4f5cb17feb3db6e7aa7bf273adc16778d6439b7\",\"dweb:/ipfs/QmTM2Khd4Gg1DNpZx9vMrjh51fewgP3SudyaUNaWYP28Gq\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]},\"openzeppelin-solidity/contracts/utils/Create2.sol\":{\"keccak256\":\"0x5993cce579ec664f9dcf6254c511b906222ac5bdaea90ee19c9d018dc02cd221\",\"urls\":[\"bzz-raw://44f185e70782fabf2bb877f6f358b3af729c04904b8146d665a507b7ec602d69\",\"dweb:/ipfs/QmTuqsSxKhBUY1kbRUbzQMM3rBZKLaTTrVfmCKn77gWFsv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b8e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063796876da14610030575b600080fd5b61004361003e36600461077e565b610059565b60405161005091906109ce565b60405180910390f35b60606100746001600160a01b0384168363ffffffff61007b16565b9392505050565b6060600061008884610222565b90506060816003016001018054806020026020016040519081016040528092919081815260200182805480156100e757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100c9575b505050505090506060815160010160405190808252806020026020018201604052801561012e57816020015b61011b610657565b8152602001906001900390816101135790505b50905084600001518160008151811061014357fe5b60209081029190910101516001600160a01b0390911690526101648561023b565b8160008151811061017157fe5b602090810291909101810151015260005b82518110156102185782818151811061019757fe5b60200260200101518282600101815181106101ae57fe5b60209081029190910101516001600160a01b03909116905282518390829081106101d457fe5b60209081029190910101516001600160a01b031686526101f38661023b565b82826001018151811061020257fe5b6020908102919091018101510152600101610182565b5095945050505050565b6000610235610230836103b4565b6103e5565b92915050565b61024361067f565b815161024e90610400565b8152815161025b90610455565b6020820152815161026b906104aa565b81604001819052508160200151516040519080825280602002602001820160405280156102b257816020015b61029f6106c0565b8152602001906001900390816102975790505b50606082015260005b816060015151811015610310576102ed8360000151846020015183815181106102e057fe5b60200260200101516104ff565b826060015182815181106102fd57fe5b60209081029190910101526001016102bb565b5081604001515160405190808252806020026020018201604052801561035057816020015b61033d6106c0565b8152602001906001900390816103355790505b50608082015260005b8160800151518110156103ae5761038b8360400151828151811061037957fe5b60200260200101518460000151610564565b8260800151828151811061039b57fe5b6020908102919091010152600101610359565b50919050565b6000816040516020016103c7919061094a565b60408051601f19818403018152919052805160209091012092915050565b60006105d0806103f88463ffffffff8316565b949350505050565b6104086106c0565b6040805160048152602481019091526020810180516001600160e01b03167f06fdde03000000000000000000000000000000000000000000000000000000001790526102359083906105d3565b61045d6106c0565b6040805160048152602481019091526020810180516001600160e01b03167f95d89b41000000000000000000000000000000000000000000000000000000001790526102359083906105d3565b6104b26106c0565b6040805160048152602481019091526020810180516001600160e01b03167f313ce567000000000000000000000000000000000000000000000000000000001790526102359083906105d3565b6105076106c0565b610074838360405160240161051c91906109a0565b60408051601f198184030181529190526020810180516001600160e01b03167f70a08231000000000000000000000000000000000000000000000000000000001790526105d3565b61056c6106c0565b82516020840151604051610074928592610588926024016109b4565b60408051601f198184030181529190526020810180516001600160e01b03167ff4b16045000000000000000000000000000000000000000000000000000000001790526105d3565b90565b6105db6106c0565b60006060846001600160a01b0316846040516105f7919061092e565b6000604051808303816000865af19150503d8060008114610634576040519150601f19603f3d011682016040523d82523d6000602084013e610639565b606091505b50604080518082019091529115158252602082015295945050505050565b604051806040016040528060006001600160a01b0316815260200161067a61067f565b905290565b6040518060a001604052806106926106c0565b815260200161069f6106c0565b81526020016106ac6106c0565b815260200160608152602001606081525090565b60408051808201909152600081526060602082015290565b600082601f8301126106e8578081fd5b81356106fb6106f682610af0565b610ac9565b818152915060208083019084810160408085028701830188101561071e57600080fd5b6000805b868110156107715782848b031215610738578182fd5b61074183610ac9565b843561074c81610b40565b81528486013561075b81610b40565b8187015286529484019492820192600101610722565b5050505050505092915050565b60008060408385031215610790578182fd5b823561079b81610b40565b915060208381013567ffffffffffffffff808211156107b8578384fd5b818601606081890312156107ca578485fd5b6107d46060610ac9565b925080356107e181610b40565b835280840135828111156107f3578586fd5b80820189601f820112610804578687fd5b803591506108146106f683610af0565b82815286810190828801888502840189018d101561083057898afd5b8993505b8484101561085b57803561084781610b40565b835260019390930192918801918801610834565b508088880152505050506040810135935081841115610878578485fd5b610884888583016106d8565b60408401525093969095509350505050565b60008282518085526020808601955080818302840101818601855b848110156108df57601f198684030189526108cd8383516108ec565b988401989250908301906001016108b1565b5090979650505050505050565b60008151151583526020820151604060208501528051806040860152610919816060870160208501610b10565b601f01601f1916939093016060019392505050565b60008251610940818460208701610b10565b9190910192915050565b7f69736f6c6174652e73696d706c652d6275726e00000000000000000000000000815260609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016601382015260270190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015610abb57603f19808a850301865282516001600160a01b03815116855288810151888a8701528051915060a0808a880152610a3460e08801846108ec565b8b830151935060608589830301818a0152610a4f82866108ec565b8c850151955060809250868a820301838b0152610a6c81876108ec565b828601519650878b820301858c0152610a858188610896565b945050505080830151935050838782030160c0880152610aa58184610896565b988b0198965050509288019250506001016109f2565b509098975050505050505050565b60405181810167ffffffffffffffff81118282101715610ae857600080fd5b604052919050565b600067ffffffffffffffff821115610b06578081fd5b5060209081020190565b60005b83811015610b2b578181015183820152602001610b13565b83811115610b3a576000848401525b50505050565b6001600160a01b0381168114610b5557600080fd5b5056fea26469706673582212207335fd01869fd7a6134d32f1c105bb5c9b25d0d770ceaff63966231d7b95959764736f6c63430006030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063796876da14610030575b600080fd5b61004361003e36600461077e565b610059565b60405161005091906109ce565b60405180910390f35b60606100746001600160a01b0384168363ffffffff61007b16565b9392505050565b6060600061008884610222565b90506060816003016001018054806020026020016040519081016040528092919081815260200182805480156100e757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100c9575b505050505090506060815160010160405190808252806020026020018201604052801561012e57816020015b61011b610657565b8152602001906001900390816101135790505b50905084600001518160008151811061014357fe5b60209081029190910101516001600160a01b0390911690526101648561023b565b8160008151811061017157fe5b602090810291909101810151015260005b82518110156102185782818151811061019757fe5b60200260200101518282600101815181106101ae57fe5b60209081029190910101516001600160a01b03909116905282518390829081106101d457fe5b60209081029190910101516001600160a01b031686526101f38661023b565b82826001018151811061020257fe5b6020908102919091018101510152600101610182565b5095945050505050565b6000610235610230836103b4565b6103e5565b92915050565b61024361067f565b815161024e90610400565b8152815161025b90610455565b6020820152815161026b906104aa565b81604001819052508160200151516040519080825280602002602001820160405280156102b257816020015b61029f6106c0565b8152602001906001900390816102975790505b50606082015260005b816060015151811015610310576102ed8360000151846020015183815181106102e057fe5b60200260200101516104ff565b826060015182815181106102fd57fe5b60209081029190910101526001016102bb565b5081604001515160405190808252806020026020018201604052801561035057816020015b61033d6106c0565b8152602001906001900390816103355790505b50608082015260005b8160800151518110156103ae5761038b8360400151828151811061037957fe5b60200260200101518460000151610564565b8260800151828151811061039b57fe5b6020908102919091010152600101610359565b50919050565b6000816040516020016103c7919061094a565b60408051601f19818403018152919052805160209091012092915050565b60006105d0806103f88463ffffffff8316565b949350505050565b6104086106c0565b6040805160048152602481019091526020810180516001600160e01b03167f06fdde03000000000000000000000000000000000000000000000000000000001790526102359083906105d3565b61045d6106c0565b6040805160048152602481019091526020810180516001600160e01b03167f95d89b41000000000000000000000000000000000000000000000000000000001790526102359083906105d3565b6104b26106c0565b6040805160048152602481019091526020810180516001600160e01b03167f313ce567000000000000000000000000000000000000000000000000000000001790526102359083906105d3565b6105076106c0565b610074838360405160240161051c91906109a0565b60408051601f198184030181529190526020810180516001600160e01b03167f70a08231000000000000000000000000000000000000000000000000000000001790526105d3565b61056c6106c0565b82516020840151604051610074928592610588926024016109b4565b60408051601f198184030181529190526020810180516001600160e01b03167ff4b16045000000000000000000000000000000000000000000000000000000001790526105d3565b90565b6105db6106c0565b60006060846001600160a01b0316846040516105f7919061092e565b6000604051808303816000865af19150503d8060008114610634576040519150601f19603f3d011682016040523d82523d6000602084013e610639565b606091505b50604080518082019091529115158252602082015295945050505050565b604051806040016040528060006001600160a01b0316815260200161067a61067f565b905290565b6040518060a001604052806106926106c0565b815260200161069f6106c0565b81526020016106ac6106c0565b815260200160608152602001606081525090565b60408051808201909152600081526060602082015290565b600082601f8301126106e8578081fd5b81356106fb6106f682610af0565b610ac9565b818152915060208083019084810160408085028701830188101561071e57600080fd5b6000805b868110156107715782848b031215610738578182fd5b61074183610ac9565b843561074c81610b40565b81528486013561075b81610b40565b8187015286529484019492820192600101610722565b5050505050505092915050565b60008060408385031215610790578182fd5b823561079b81610b40565b915060208381013567ffffffffffffffff808211156107b8578384fd5b818601606081890312156107ca578485fd5b6107d46060610ac9565b925080356107e181610b40565b835280840135828111156107f3578586fd5b80820189601f820112610804578687fd5b803591506108146106f683610af0565b82815286810190828801888502840189018d101561083057898afd5b8993505b8484101561085b57803561084781610b40565b835260019390930192918801918801610834565b508088880152505050506040810135935081841115610878578485fd5b610884888583016106d8565b60408401525093969095509350505050565b60008282518085526020808601955080818302840101818601855b848110156108df57601f198684030189526108cd8383516108ec565b988401989250908301906001016108b1565b5090979650505050505050565b60008151151583526020820151604060208501528051806040860152610919816060870160208501610b10565b601f01601f1916939093016060019392505050565b60008251610940818460208701610b10565b9190910192915050565b7f69736f6c6174652e73696d706c652d6275726e00000000000000000000000000815260609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016601382015260270190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015610abb57603f19808a850301865282516001600160a01b03815116855288810151888a8701528051915060a0808a880152610a3460e08801846108ec565b8b830151935060608589830301818a0152610a4f82866108ec565b8c850151955060809250868a820301838b0152610a6c81876108ec565b828601519650878b820301858c0152610a858188610896565b945050505080830151935050838782030160c0880152610aa58184610896565b988b0198965050509288019250506001016109f2565b509098975050505050505050565b60405181810167ffffffffffffffff81118282101715610ae857600080fd5b604052919050565b600067ffffffffffffffff821115610b06578081fd5b5060209081020190565b60005b83811015610b2b578181015183820152602001610b13565b83811115610b3a576000848401525b50505050565b6001600160a01b0381168114610b5557600080fd5b5056fea26469706673582212207335fd01869fd7a6134d32f1c105bb5c9b25d0d770ceaff63966231d7b95959764736f6c63430006030033",
  "sourceMap": "191:292:26:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;191:292:26;;;;;;;",
  "deployedSourceMap": "191:292:26:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;191:292:26;;;;;;;;;;;;;;;;12:1:-1;9;2:12;262:219:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;363:46;424:52;-1:-1:-1;;;;;424:45:26;;470:5;424:45;:52::i;:::-;417:59;262:219;-1:-1:-1;;;262:219:26:o;363:736:27:-;491:23;522:54;579:63;628:13;579:48;:63::i;:::-;522:120;;648:20;671:7;:19;;:23;;648:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;648:46:27;;;-1:-1:-1;648:46:27;;;;;;;;;;;;;;;;;;;700:30;754:3;:10;767:1;754:14;733:36;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;700:69;;793:5;:11;;;775:6;782:1;775:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;775:29:27;;;;;;827:33;854:5;827:26;:33::i;:::-;810:6;817:1;810:9;;;;;;;;;;;;;;;;;;;:14;:50;-1:-1:-1;866:210:27;890:3;:10;886:1;:14;866:210;;;953:3;957:1;953:6;;;;;;;;;;;;;;915;922:1;926;922:5;915:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;915:46:27;;;;;;999:6;;;;1003:1;;999:6;;;;;;;;;;;;;;;;-1:-1:-1;;;;;969:38:27;;;1036:33;969:38;1036:26;:33::i;:::-;1015:6;1022:1;1026;1022:5;1015:13;;;;;;;;;;;;;;;;;;;:18;:54;902:3;;866:210;;;-1:-1:-1;1088:6:27;363:736;-1:-1:-1;;;;;363:736:27:o;1335:157:13:-;1403:15;1433:54;1450:36;1472:13;1450:21;:36::i;:::-;1433:16;:54::i;:::-;1426:61;1335:157;-1:-1:-1;;1335:157:13:o;961:765:29:-;1035:30;;:::i;:::-;1097:13;;1087:24;;:9;:24::i;:::-;1073:38;;1145:13;;1133:26;;:11;:26::i;:::-;1117:13;;;:42;1197:13;;1183:28;;:13;:28::i;:::-;1165:6;:15;;:46;;;;1263:7;:22;;;:29;1246:47;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1217:26:29;;;:76;1304:9;1299:165;1323:6;:26;;;:33;1319:1;:37;1299:165;;;1403:54;1416:7;:13;;;1431:7;:22;;;1454:1;1431:25;;;;;;;;;;;;;;1403:12;:54::i;:::-;1371:6;:26;;;1398:1;1371:29;;;;;;;;;;;;;;;;;:86;1358:3;;1299:165;;;;1516:7;:23;;;:30;1499:48;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1469:27:29;;;:78;1558:9;1553:169;1577:6;:27;;;:34;1573:1;:38;1553:169;;;1659:56;1673:7;:23;;;1697:1;1673:26;;;;;;;;;;;;;;1701:7;:13;;;1659;:56::i;:::-;1626:6;:27;;;1654:1;1626:30;;;;;;;;;;;;;;;;;:89;1613:3;;1553:169;;;;961:765;;;:::o;816:166:13:-;886:7;966:8;926:49;;;;;;;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;926::13;;;916:60;;49:4:-1;916:60:13;;;;;;-1:-1:-1;;816:166:13:o;1064:268::-;1121:15;1261:4;;1318:9;1323:3;1318:9;;;:::i;:::-;1311:16;1064:268;-1:-1:-1;;;;1064:268:13:o;2054:140:29:-;2106:17;;:::i;:::-;2155:33;;;22:32:-1;6:49;;2155:33:29;;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;2155:33:29;179:29:-1;160:49;;2138:51:29;;2148:5;;2138:9;:51::i;1907:144::-;1961:17;;:::i;:::-;2010:35;;;22:32:-1;6:49;;2010:35:29;;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;2010:35:29;179:29:-1;160:49;;1993:53:29;;2003:5;;1993:9;:53::i;802:156::-;866:17;;:::i;:::-;915:37;;;22:32:-1;6:49;;915:37:29;;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;915:37:29;179:29:-1;160:49;;898:55:29;;908:5;;898:9;:55::i;1729:175::-;1798:17;;:::i;:::-;1830:69;1840:5;1893:4;1847:51;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1847:51:29;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;1847:51:29;179:29:-1;160:49;;1830:9:29;:69::i;2197:240::-;2288:17;;:::i;:::-;2390:19;;2411;;;;2337:94;;2320:112;;2330:5;;2337:94;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;2337:94:29;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;2337:94:29;179:29:-1;160:49;;2320:9:29;:112::i;985:76:13:-;1055:1;985:76::o;564:235:29:-;638:17;;:::i;:::-;700:19;;664:12;;678:18;;-1:-1:-1;;;;;700:10:29;;;:19;;711:7;;700:19;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;732:62:29;;;;;;;;;;;;;;;;;;;564:235;-1:-1:-1;;;;;564:235:29:o;191:292:26:-;;;;;;;;;;-1:-1:-1;191:292:26;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;191:292:26;;;;;;;;:::o;1072:801:-1:-;;1219:3;1212:4;1204:6;1200:17;1196:27;1186:2;;-1:-1;;1227:12;1186:2;1274:6;1261:20;1296:110;1311:94;1398:6;1311:94;;;1296:110;;;1434:21;;;1287:119;-1:-1;1478:4;1491:14;;;;1466:17;;;1592:4;1580:17;;;1571:27;;;;1568:36;-1:-1;1565:2;;;1617:1;;1607:12;1565:2;1642:1;;1627:240;1652:6;1649:1;1646:13;1627:240;;;1592:4;2040:9;2035:3;2031:19;2027:30;2024:2;;;1642:1;;2060:12;2024:2;2088:20;1592:4;2088:20;;;230:6;217:20;242:41;277:5;242:41;;;2174:83;;2389:22;;;217:20;242:41;217:20;242:41;;;2342:16;;;2335:83;1720:84;;1818:14;;;;1846;;;;1674:1;1667:9;1627:240;;;1631:14;;;;;;;1179:694;;;;;3397:522;;;3553:2;3541:9;3532:7;3528:23;3524:32;3521:2;;;-1:-1;;3559:12;3521:2;85:6;72:20;97:33;124:5;97:33;;;3611:63;-1:-1;3739:2;3724:18;;;3711:32;3763:18;3752:30;;;3749:2;;;-1:-1;;3785:12;3749:2;3886:6;3875:9;3871:22;2615:4;2603:9;2598:3;2594:19;2590:30;2587:2;;;-1:-1;;2623:12;2587:2;2651:20;2615:4;2651:20;;;2642:29;;230:6;217:20;242:41;277:5;242:41;;;2729:83;;2896:18;;;2883:32;2924:30;;;2921:2;;;-1:-1;;2957:12;2921:2;3059:6;3048:9;3044:22;426:3;419:4;411:6;407:17;403:27;393:2;;-1:-1;;434:12;393:2;481:6;468:20;454:34;;503:76;518:60;571:6;518:60;;503:76;607:21;;;664:14;;;;639:17;;;753;;;744:27;;;;741:36;-1:-1;738:2;;;-1:-1;;780:12;738:2;-1:-1;806:10;;800:206;825:6;822:1;819:13;800:206;;;85:6;72:20;97:33;124:5;97:33;;;893:50;;847:1;840:9;;;;;957:14;;;;985;;800:206;;;804:14;3002:70;3739:2;2988:5;2984:16;2977:96;;;;;3553:2;3162:9;3158:18;3145:32;3131:46;;3763:18;3189:6;3186:30;3183:2;;;-1:-1;;3219:12;3183:2;3264:104;3364:3;3355:6;3344:9;3340:22;3264:104;;;3553:2;3246:16;;3239:130;-1:-1;3515:404;;3250:5;;-1:-1;3515:404;-1:-1;;;;3515:404;5102:1004;;5267:88;5349:5;14816:12;15704:6;15699:3;15692:19;15741:4;;15736:3;15732:14;5361:107;;15741:4;;5525:6;5521:17;15736:3;5512:27;;15741:4;5630:5;14464:14;-1:-1;5669:398;5694:6;5691:1;5688:13;5669:398;;;5746:20;;15736:3;5750:4;5746:20;;5741:3;5734:33;4076:98;4170:3;5801:6;5795:13;4076:98;;;6046:14;;;;5815:120;-1:-1;15390:14;;;;5716:1;5709:9;5669:398;;;-1:-1;6090:10;;5260:846;-1:-1;;;;;;;5260:846;8522:555;;8740:16;8734:23;16713:13;16706:21;7361:3;7354:34;8900:4;8893:5;8889:16;8883:23;8665:4;8900;8930:3;8926:14;8919:38;7887:5;14816:12;15704:6;8665:4;8660:3;8656:14;15692:19;7970:52;8015:6;15732:14;8660:3;15732:14;8900:4;7996:5;7992:16;7970:52;;;5746:20;17410:14;-1:-1;;17406:28;8034:39;;;;15732:14;8034:39;;8638:439;-1:-1;;;8638:439;11536:262;;7560:5;14816:12;7671:52;7716:6;7711:3;7704:4;7697:5;7693:16;7671:52;;;7735:16;;;;;11661:137;-1:-1;;11661:137;11805:511;8382:21;8362:42;;17521:2;17517:14;;;;;;8346:2;8423:12;;4953:58;12279:12;;;12013:303;12323:213;-1:-1;;;;;16801:54;;;;4543:45;;12441:2;12426:18;;12412:124;12543:388;-1:-1;;;;;16801:54;;;4543:45;;16801:54;;12917:2;12902:18;;4543:45;12721:2;12706:18;;12692:239;12938:473;13162:2;13176:47;;;14816:12;;13147:18;;;15692:19;;;12938:473;;13162:2;15732:14;;;;;;6682:17;;;6673:27;;;;14464:14;;;12938:473;6838:414;6863:6;6860:1;6857:13;6838:414;;;-1:-1;;6915:20;;;;;6903:33;;6964:13;;9401:23;;-1:-1;;;;;16801:54;4543:45;;9577:16;;9571:23;9614:14;;;9607:38;;;10128:23;;-1:-1;9325:14;;;10164:38;;;10128:23;;9571;10217:105;10053:14;;;10128:23;10217:105;;;13162:2;10402:5;10398:16;10392:23;10372:43;;10435:14;6915:20;9329:3;10455:4;10451:14;;10435;9329:3;10435:14;10428:38;10481:105;10581:4;10567:12;10481:105;;;15732:14;10668:5;10664:16;10658:23;10638:43;;10701:14;;;6915:20;9329:3;10721:4;10717:14;;10701;9329:3;10701:14;10694:38;10747:105;10847:4;10833:12;10747:105;;;10435:14;10945:5;10941:16;10935:23;10915:43;;6915:20;9329:3;10998:4;10994:14;;10062:4;9329:3;10978:14;10971:38;11024:147;11166:4;11152:12;11024:147;;;11016:155;;;;;10701:14;11265:5;11261:16;11255:23;11235:43;;;6915:20;9329:3;11318:4;11314:14;;11298;9329:3;11298:14;11291:38;11344:147;11486:4;11472:12;11344:147;;;7231:14;;;;6984:128;-1:-1;;;15390:14;;;;-1:-1;;6885:1;6878:9;6838:414;;;-1:-1;13229:172;;13133:278;-1:-1;;;;;;;;13133:278;13418:256;13480:2;13474:9;13506:17;;;13581:18;13566:34;;13602:22;;;13563:62;13560:2;;;13638:1;;13628:12;13560:2;13480;13647:22;13458:216;;-1:-1;13458:216;13681:300;;13836:18;13828:6;13825:30;13822:2;;;-1:-1;;13858:12;13822:2;-1:-1;13903:4;13891:17;;;13956:15;;13759:222;16868:268;16933:1;16940:101;16954:6;16951:1;16948:13;16940:101;;;17021:11;;;17015:18;17002:11;;;16995:39;16976:2;16969:10;16940:101;;;17056:6;17053:1;17050:13;17047:2;;;16933:1;17112:6;17107:3;17103:16;17096:27;17047:2;;16917:219;;;;17549:117;-1:-1;;;;;16801:54;;17608:35;;17598:2;;17657:1;;17647:12;17598:2;17592:74;",
  "source": "pragma solidity ^0.6.3;\npragma experimental ABIEncoderV2;\n\nimport { PortfolioReaderViewLib } from \"./PortfolioReaderViewLib.sol\";\nimport { TokenQueryLib } from \"../token/TokenQueryLib.sol\";\n\ncontract PortfolioReaderView {\n  using PortfolioReaderViewLib for *;\n  function render(address moduleAddress, TokenQueryLib.TokenQueryPayload memory query) public returns (PortfolioReaderViewLib.PortfolioEntry[] memory) {\n    return moduleAddress.executePortfolioReaderViewLogic(query);\n  }\n}\n",
  "sourcePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol",
  "ast": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol",
    "exportedSymbols": {
      "PortfolioReaderView": [
        4931
      ]
    },
    "id": 4932,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4907,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:26"
      },
      {
        "id": 4908,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:26"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderViewLib.sol",
        "file": "./PortfolioReaderViewLib.sol",
        "id": 4910,
        "nodeType": "ImportDirective",
        "scope": 4932,
        "sourceUnit": 5063,
        "src": "59:70:26",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4909,
              "name": "PortfolioReaderViewLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "68:22:26",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/token/TokenQueryLib.sol",
        "file": "../token/TokenQueryLib.sol",
        "id": 4912,
        "nodeType": "ImportDirective",
        "scope": 4932,
        "sourceUnit": 5391,
        "src": "130:59:26",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4911,
              "name": "TokenQueryLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "139:13:26",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4931,
        "linearizedBaseContracts": [
          4931
        ],
        "name": "PortfolioReaderView",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4914,
            "libraryName": {
              "contractScope": null,
              "id": 4913,
              "name": "PortfolioReaderViewLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5062,
              "src": "230:22:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PortfolioReaderViewLib_$5062",
                "typeString": "library PortfolioReaderViewLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:35:26",
            "typeName": null
          },
          {
            "body": {
              "id": 4929,
              "nodeType": "Block",
              "src": "411:70:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4926,
                        "name": "query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4918,
                        "src": "470:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_memory_ptr",
                          "typeString": "struct TokenQueryLib.TokenQueryPayload memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_memory_ptr",
                          "typeString": "struct TokenQueryLib.TokenQueryPayload memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4924,
                        "name": "moduleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4916,
                        "src": "424:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executePortfolioReaderViewLogic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "424:45:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TokenQueryPayload_$5146_memory_ptr_$returns$_t_array$_t_struct$_PortfolioEntry_$4943_memory_$dyn_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,struct TokenQueryLib.TokenQueryPayload memory) returns (struct PortfolioReaderViewLib.PortfolioEntry memory[] memory)"
                      }
                    },
                    "id": 4927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:52:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$4943_memory_$dyn_memory_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry memory[] memory"
                    }
                  },
                  "functionReturnParameters": 4923,
                  "id": 4928,
                  "nodeType": "Return",
                  "src": "417:59:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "796876da",
            "id": 4930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "render",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4916,
                  "name": "moduleAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4930,
                  "src": "278:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4918,
                  "name": "query",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4930,
                  "src": "301:44:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_memory_ptr",
                    "typeString": "struct TokenQueryLib.TokenQueryPayload"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4917,
                    "name": "TokenQueryLib.TokenQueryPayload",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5146,
                    "src": "301:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_storage_ptr",
                      "typeString": "struct TokenQueryLib.TokenQueryPayload"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:69:26"
            },
            "returnParameters": {
              "id": 4923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4930,
                  "src": "363:46:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$4943_memory_$dyn_memory_ptr",
                    "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4920,
                      "name": "PortfolioReaderViewLib.PortfolioEntry",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4943,
                      "src": "363:37:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PortfolioEntry_$4943_storage_ptr",
                        "typeString": "struct PortfolioReaderViewLib.PortfolioEntry"
                      }
                    },
                    "id": 4921,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "363:39:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$4943_storage_$dyn_storage_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "362:48:26"
            },
            "scope": 4931,
            "src": "262:219:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4932,
        "src": "191:292:26"
      }
    ],
    "src": "0:484:26"
  },
  "legacyAST": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol",
    "exportedSymbols": {
      "PortfolioReaderView": [
        4931
      ]
    },
    "id": 4932,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4907,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:26"
      },
      {
        "id": 4908,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:26"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderViewLib.sol",
        "file": "./PortfolioReaderViewLib.sol",
        "id": 4910,
        "nodeType": "ImportDirective",
        "scope": 4932,
        "sourceUnit": 5063,
        "src": "59:70:26",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4909,
              "name": "PortfolioReaderViewLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "68:22:26",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/token/TokenQueryLib.sol",
        "file": "../token/TokenQueryLib.sol",
        "id": 4912,
        "nodeType": "ImportDirective",
        "scope": 4932,
        "sourceUnit": 5391,
        "src": "130:59:26",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4911,
              "name": "TokenQueryLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "139:13:26",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4931,
        "linearizedBaseContracts": [
          4931
        ],
        "name": "PortfolioReaderView",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4914,
            "libraryName": {
              "contractScope": null,
              "id": 4913,
              "name": "PortfolioReaderViewLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5062,
              "src": "230:22:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PortfolioReaderViewLib_$5062",
                "typeString": "library PortfolioReaderViewLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:35:26",
            "typeName": null
          },
          {
            "body": {
              "id": 4929,
              "nodeType": "Block",
              "src": "411:70:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4926,
                        "name": "query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4918,
                        "src": "470:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_memory_ptr",
                          "typeString": "struct TokenQueryLib.TokenQueryPayload memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_memory_ptr",
                          "typeString": "struct TokenQueryLib.TokenQueryPayload memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4924,
                        "name": "moduleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4916,
                        "src": "424:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executePortfolioReaderViewLogic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5061,
                      "src": "424:45:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TokenQueryPayload_$5146_memory_ptr_$returns$_t_array$_t_struct$_PortfolioEntry_$4943_memory_$dyn_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,struct TokenQueryLib.TokenQueryPayload memory) returns (struct PortfolioReaderViewLib.PortfolioEntry memory[] memory)"
                      }
                    },
                    "id": 4927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:52:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$4943_memory_$dyn_memory_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry memory[] memory"
                    }
                  },
                  "functionReturnParameters": 4923,
                  "id": 4928,
                  "nodeType": "Return",
                  "src": "417:59:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "796876da",
            "id": 4930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "render",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4916,
                  "name": "moduleAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4930,
                  "src": "278:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4918,
                  "name": "query",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4930,
                  "src": "301:44:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_memory_ptr",
                    "typeString": "struct TokenQueryLib.TokenQueryPayload"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4917,
                    "name": "TokenQueryLib.TokenQueryPayload",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5146,
                    "src": "301:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenQueryPayload_$5146_storage_ptr",
                      "typeString": "struct TokenQueryLib.TokenQueryPayload"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:69:26"
            },
            "returnParameters": {
              "id": 4923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4930,
                  "src": "363:46:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$4943_memory_$dyn_memory_ptr",
                    "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4920,
                      "name": "PortfolioReaderViewLib.PortfolioEntry",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4943,
                      "src": "363:37:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PortfolioEntry_$4943_storage_ptr",
                        "typeString": "struct PortfolioReaderViewLib.PortfolioEntry"
                      }
                    },
                    "id": 4921,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "363:39:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$4943_storage_$dyn_storage_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "362:48:26"
            },
            "scope": 4931,
            "src": "262:219:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4932,
        "src": "191:292:26"
      }
    ],
    "src": "0:484:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.3+commit.8dda9521.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-03T03:35:12.875Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}