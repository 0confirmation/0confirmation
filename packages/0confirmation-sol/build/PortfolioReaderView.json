{
  "contractName": "PortfolioReaderView",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "balanceQueries",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "sourceAddress",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct TokenQueryLib.ApprovalQueryPayload[]",
              "name": "approvalQueries",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct TokenQueryLib.TokenQueryPayload",
          "name": "query",
          "type": "tuple"
        }
      ],
      "name": "render",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "token",
              "type": "address"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult",
                  "name": "name",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult",
                  "name": "symbol",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult",
                  "name": "decimals",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult[]",
                  "name": "balanceQueryResults",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "value",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct TokenQueryLib.DataResult[]",
                  "name": "approvalQueryResults",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TokenQueryLib.TokenQueryResult",
              "name": "data",
              "type": "tuple"
            }
          ],
          "internalType": "struct PortfolioReaderViewLib.PortfolioEntry[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.5+commit.f956cc89\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"balanceQueries\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sourceAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct TokenQueryLib.ApprovalQueryPayload[]\",\"name\":\"approvalQueries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TokenQueryLib.TokenQueryPayload\",\"name\":\"query\",\"type\":\"tuple\"}],\"name\":\"render\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult\",\"name\":\"name\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult\",\"name\":\"symbol\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult\",\"name\":\"decimals\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult[]\",\"name\":\"balanceQueryResults\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct TokenQueryLib.DataResult[]\",\"name\":\"approvalQueryResults\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TokenQueryLib.TokenQueryResult\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct PortfolioReaderViewLib.PortfolioEntry[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol\":\"PortfolioReaderView\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/BorrowProxy.sol\":{\"keccak256\":\"0x1130eb9f9e52361fbc7cbf5eeaf23928da392ff797f2a072979dee12544118e7\",\"urls\":[\"bzz-raw://5f50cc40060319af7805161fe518c939300eb563d7be94e5689b80e0a26c8e48\",\"dweb:/ipfs/QmTdQdk1LkZoWayk6xnLZVub98GTN4aUiQuJ1vqho8hozA\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/BorrowProxyLib.sol\":{\"keccak256\":\"0xf5d8db11d8a61b7e3c1739a332601021f0e4afd73057df5071e29aa5f139015e\",\"urls\":[\"bzz-raw://cb064a557ff68318974536bad4c37f7cdbe5b42e68358f220c87c9f05ae7ed23\",\"dweb:/ipfs/QmU9bodniqBvRvPCevCB3MarKbQrD3bjaBiqC9N692RNyq\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/SandboxLib.sol\":{\"keccak256\":\"0x6676906d2dee76a50989379c2b74ae51e31d5fe663593c127d253d728a6104f1\",\"urls\":[\"bzz-raw://6be87f9544c1014d01eb2c426a075d67fc99851634edf87f5d4c0712d10e8c6e\",\"dweb:/ipfs/QmenwtvdozianthW4CPg8FtjFgcbcmJcVdks61RL7PLhXF\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/ShifterBorrowProxyLib.sol\":{\"keccak256\":\"0x6b9cb05c4af963a87e79afa829a79c95a9af92d35ec3b31fc144e0cc37c9bf3c\",\"urls\":[\"bzz-raw://663f708faa4a37fe88b50f13795decfb4471b47f58a9b0837d82f9cc428bc00b\",\"dweb:/ipfs/QmPhb9o15A1jDeyAG7FzMMbpVx5JesHueR8StbDtE7npAG\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/adapters/assets/erc20/ERC20AdapterLib.sol\":{\"keccak256\":\"0xb2e9ceaa2c662a7ab91f2ebf7a9d667b25cc8457ad4c5d42e55555c353540f1d\",\"urls\":[\"bzz-raw://c76a2ceff05556771d89a841ad38546836d3c54ffd6f62f3293fa15ddec82f9e\",\"dweb:/ipfs/QmQp5LwDZTrPmscFbf8BxNFJMkYdpa8D1f1yjAdUe39DiZ\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/adapters/lib/AssetForwarder.sol\":{\"keccak256\":\"0xfca075463283eef418af4acaafb6f0623d158f0ee6cfd49ca9e42be74debdefe\",\"urls\":[\"bzz-raw://3c32d28395ce117f134a8c86a8e171fed573aa8dba587d5ecd4d3fc6c4f978ec\",\"dweb:/ipfs/QmcKVwFCKSk9qPxWB43T2xLHu6dE1cg42npsHXAcb1PoHM\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/adapters/lib/ModuleLib.sol\":{\"keccak256\":\"0xfe5e08b3fc26b144fa3e9b29a3557f47aaa2131a66031e90bd78f2bc32fdb2a2\",\"urls\":[\"bzz-raw://8286e7ef04507ec8edf2d9afc48b2974014c8a2b05ce08a1688330d8adba09f4\",\"dweb:/ipfs/Qmf4EfECj9DwWQ6Wm5WQAFJQsdAg9pthFcmWbL8Zx75DHg\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/adapters/liquidity/SimpleBurnLiquidationModule.sol\":{\"keccak256\":\"0xa3c52cdd566187a4944f80e71723ba81421b8addc4c8af2b3287d1282ede30c0\",\"urls\":[\"bzz-raw://fedd8b866d77fc25a74443db3fb51e00c21c0636414f1f95c4886440e9840810\",\"dweb:/ipfs/QmPvnqkRAVtdyrh1kqx5pntiLX9iis4MtnLLb78wEbaFmT\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/adapters/liquidity/SimpleBurnLiquidationModuleLib.sol\":{\"keccak256\":\"0xc64cd29c472c327251e27a061b41cc8ed1e2fbbe638a88bf623733f556d9ec27\",\"urls\":[\"bzz-raw://2db1f3ca436396d13eca869c2dbdbb998f053a4d28d74856c38a52c4796106d1\",\"dweb:/ipfs/QmfJha4FNrxM5Je6K1x1D1dKJmrdEjUHCzHVe4CpARwje9\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IBorrowProxyController.sol\":{\"keccak256\":\"0xf836de5fcc8ee3d109b716c7375a20c12edaaa9f3af637981a4c1c282fc49972\",\"urls\":[\"bzz-raw://1603aa157f42fe8a1b53b967c9ad37c69ac4fb8fa2f2f106e728e3110de6aa8a\",\"dweb:/ipfs/QmP9gRaiEMbU5zCKt2TfSJg2Yq21255EbKbQWdLqpUogZ2\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IModuleRegistryProvider.sol\":{\"keccak256\":\"0x9d6a8d1ba91e453cfce4563a556c85fd9438c0d7a6f572c7d15185a1070f3c40\",\"urls\":[\"bzz-raw://845207b73ca800e20be63031e1a388fe4e9ff9812b5045e0437451496cad56cd\",\"dweb:/ipfs/QmYsu7ASZPHeFKyhbJMJeFUUDGSfc5d6ZzZeBDRDijB72z\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IShifter.sol\":{\"keccak256\":\"0x090018c3a7a1763c024d99957612ff2bddbfb548cf577b7a7796328321d3daed\",\"urls\":[\"bzz-raw://73239bac4b9f00afde4259c81762d89c1d1d26d805bb3301ea9bb943e62abc5e\",\"dweb:/ipfs/Qmb1ec1ze7Fz1WQJVRyjcKGCsV3Jp6fUW97VenEf9JJPEy\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IUniswapExchange.sol\":{\"keccak256\":\"0x9ea0c405a16530b01c3019c0e60fb78b3f776027ee02cd82a095ac5f7d916e4a\",\"urls\":[\"bzz-raw://5dc17e81c7bd9f00b5d62a6ca99c7d5189ff432a7bfd04311d3492133bb5d39d\",\"dweb:/ipfs/QmdqDogtFp5socjqCo7U4oBTdQ8VMC5Qdgiv2ejPYNknte\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/interfaces/IUniswapFactory.sol\":{\"keccak256\":\"0x8f5b23ac9d723999084981e080e8ce419a7a304e424ba37cfa23fb49cd2b648b\",\"urls\":[\"bzz-raw://bbaac12e100717449222e9978c5d270ce9b4a57ef83b16d3ce0b2dbdfdc12e0a\",\"dweb:/ipfs/QmYcQHLfZ91neuYptPnaTNGXwwTELdwnF4BdhhkJh1nifP\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol\":{\"keccak256\":\"0x07ffe0a1c2c772b53565a28a11ce54deaa861dc3c5de68d3dd77386777af3a85\",\"urls\":[\"bzz-raw://39002fc81bf364afbff3211c22d009b8edd69da4cc4d7d9987158a4e5370a708\",\"dweb:/ipfs/QmaFZ7EQAqnNEnB7bDA39FMfvnWF7qvk8bpwUrbSyLNSfc\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderViewLib.sol\":{\"keccak256\":\"0xbe27d4a8b9eb26193a1cde4cf71b623c1f5f6b15085f175c692041b836476e8b\",\"urls\":[\"bzz-raw://b0d6eb5f8f0caefcc44fed147e4cad8534f7a25680b235256bd6650c855b06a4\",\"dweb:/ipfs/Qmc9vxRT33646nEhGZnuP8mv3fSnRm8Hwsm2eoWsR4zNWb\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/token/TokenQueryLib.sol\":{\"keccak256\":\"0xd219258204ac0e8aac2e8e9d07b2f8814a7eebe0b27e6fbf5f43a4b1c0030ed2\",\"urls\":[\"bzz-raw://21da6c04e775381ed19369c5a0464745f56a9c8f198b7af6350aa764039b9fc5\",\"dweb:/ipfs/QmZ5MUtg2YMQjgrg64stgGipwHkP7BB6H9JEns7s7kMq7h\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/AddressSetLib.sol\":{\"keccak256\":\"0x2ff94da38b4de9cbf144e3554164d4468a6ad1f68c3f321257061fd90047f450\",\"urls\":[\"bzz-raw://092af8e003194ee1ff0ade6eb4c57fe1525bdc91362bb512b54fd9f5117e108a\",\"dweb:/ipfs/QmawSof9WUHcNZ6iZpJ3RubGR8VWzUkasrSXZrxr9C3puj\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/ExtLib.sol\":{\"keccak256\":\"0x0efb9574b1fefea0f9b3f1f10663f9ece1595102111903437c9c5be6268ac136\",\"urls\":[\"bzz-raw://c4040e404a16b0ff79a53a586b293328630c610cc8a5c6e7c1cd9e62d0b50cfa\",\"dweb:/ipfs/Qmbhn6ZpJ3PDxU2BkrJRpfG3nC1YhYKtqwnYsN5x9p7oRD\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/MemcpyLib.sol\":{\"keccak256\":\"0xe34b27a01d716516d045ad0bfca9bad332d732f8ff1defd7b4a0563df98d2a38\",\"urls\":[\"bzz-raw://ca35e768aacdbef94807419b549886f15f124292603d65110872cfc9d6c14b7c\",\"dweb:/ipfs/QmcBMwGiMS8KzjFxPFX8CErSLEHM3azw9sA7EGebPa9aW8\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/RevertCaptureLib.sol\":{\"keccak256\":\"0x2a6b794ae55aca64425cfe9d7c8291c28b06b02225b89421459c08671cb5d146\",\"urls\":[\"bzz-raw://289a1cc3b536083e1bf76941f234b3f0c2ca9b82112cdd53d1f19004f842b08d\",\"dweb:/ipfs/QmNnJj9VA1JzSPfvPQiWrtfNJm7hc3ujP27MhUtMZKGzVi\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/SafeView.sol\":{\"keccak256\":\"0xbfac41d32d22df189cbc12e20c0374ac00d42c95311f3bd1ba5f7f738398f335\",\"urls\":[\"bzz-raw://6e39bc3bc0acc89acb4a62ec4c18ff4778369f71b1c73298387790be86ac73a6\",\"dweb:/ipfs/QmXzMqbEp9fNd5sTchGpGKwN7emAxffwTWHfwqD2MMmDvE\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/SliceLib.sol\":{\"keccak256\":\"0xa256acc9d42ff8f6915388594a7d1552f545e789d50d7fe741ff66ac0b3d9a05\",\"urls\":[\"bzz-raw://f2fdd5ab737b6ed2e66b800234efb03f4e93a77cda5c1420479d984b02b8baef\",\"dweb:/ipfs/QmYCCgArfekzVJuYD1EZrNSJHZasevZx6AMgLxX9UXs6iz\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/TokenUtils.sol\":{\"keccak256\":\"0x0e4c2e9331002166623c397211d33f4957bd4cf2b26b1cb0e39a30257206bf15\",\"urls\":[\"bzz-raw://5edfda4cf6b45e66c06df8854d29d4f523190ac5d728b7e486cb1f1136738b46\",\"dweb:/ipfs/QmW5M9dZmKCep3eQEq8rS6tLfNgF2PbiCv4eyhG9qNnfXk\"]},\"/home/ray/0confirmation/packages/0confirmation-sol/contracts/utils/ViewExecutor.sol\":{\"keccak256\":\"0xcc239b981aaff14855e7fda071e77cd2de42a97a1d4d20e1ec11ff37a1f45fe9\",\"urls\":[\"bzz-raw://19baca0f3704a368b4496f7d5329f778a08185d701de0e2d9375c1036d1a7833\",\"dweb:/ipfs/QmT6kBkxdBmwxhFi4h84ejvW2ehZRLhJRYGqiyk3taUpQJ\"]},\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x0c4a4883483cd70c6541aa55ae609483d65d457f160963da29acfc39f9a555ec\",\"urls\":[\"bzz-raw://8fa01aeec715a6ee596e68809306717f9343f175058217f85761161bfc832dfd\",\"dweb:/ipfs/QmTRt1sA3PQjiBV8Hka4jQ5hmAY8CJrujz2TMt5PqdNKjc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]},\"openzeppelin-solidity/contracts/utils/Create2.sol\":{\"keccak256\":\"0x5993cce579ec664f9dcf6254c511b906222ac5bdaea90ee19c9d018dc02cd221\",\"urls\":[\"bzz-raw://44f185e70782fabf2bb877f6f358b3af729c04904b8146d665a507b7ec602d69\",\"dweb:/ipfs/QmTuqsSxKhBUY1kbRUbzQMM3rBZKLaTTrVfmCKn77gWFsv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b04806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639e2ba4e514610030575b600080fd5b61004361003e36600461073d565b610059565b6040516100509190610942565b60405180910390f35b60606100648261006a565b92915050565b60606000610076610226565b90506060816002016001018054806020026020016040519081016040528092919081815260200182805480156100d557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100b7575b505050505090506060815160010167ffffffffffffffff811180156100f957600080fd5b5060405190808252806020026020018201604052801561013357816020015b61012061060d565b8152602001906001900390816101185790505b50905084600001518160008151811061014857fe5b60209081029190910101516001600160a01b0390911690526101698561023d565b8160008151811061017657fe5b602090810291909101810151015260005b825181101561021d5782818151811061019c57fe5b60200260200101518282600101815181106101b357fe5b60209081029190910101516001600160a01b03909116905282518390829081106101d957fe5b60209081029190910101516001600160a01b031686526101f88661023d565b82826001018151811061020757fe5b6020908102919091018101510152600101610187565b50949350505050565b60006102386102336103e1565b610410565b905090565b610245610635565b815161025090610426565b8152815161025d90610462565b6020820152815161026d9061049e565b604082015260208201515167ffffffffffffffff8111801561028e57600080fd5b506040519080825280602002602001820160405280156102c857816020015b6102b5610676565b8152602001906001900390816102ad5790505b50606082015260005b816060015151811015610326576103038360000151846020015183815181106102f657fe5b60200260200101516104da565b8260600151828151811061031357fe5b60209081029190910101526001016102d1565b5081604001515167ffffffffffffffff8111801561034357600080fd5b5060405190808252806020026020018201604052801561037d57816020015b61036a610676565b8152602001906001900390816103625790505b50608082015260005b8160800151518110156103db576103b8836040015182815181106103a657fe5b6020026020010151846000015161052d565b826080015182815181106103c857fe5b6020908102919091010152600101610386565b50919050565b60006040516020016103f2906108f5565b6040516020818303038152906040528051906020012060001c905090565b60006100648261041e610580565b63ffffffff16565b61042e610676565b6040805160048152602481019091526020810180516001600160e01b03166306fdde0360e01b179052610064908390610586565b61046a610676565b6040805160048152602481019091526020810180516001600160e01b03166395d89b4160e01b179052610064908390610586565b6104a6610676565b6040805160048152602481019091526020810180516001600160e01b031663313ce56760e01b179052610064908390610586565b6104e2610676565b61052683836040516024016104f79190610914565b60408051601f198184030181529190526020810180516001600160e01b03166370a0823160e01b179052610586565b9392505050565b610535610676565b8251602084015160405161052692859261055192602401610928565b60408051601f198184030181529190526020810180516001600160e01b031663f4b1604560e01b179052610586565b61060a90565b61058e610676565b60006060846001600160a01b0316846040516105aa91906108d9565b6000604051808303816000865af19150503d80600081146105e7576040519150601f19603f3d011682016040523d82523d6000602084013e6105ec565b606091505b50604080518082019091529115158252602082015295945050505050565b90565b604051806040016040528060006001600160a01b03168152602001610630610635565b905290565b6040518060a00160405280610648610676565b8152602001610655610676565b8152602001610662610676565b815260200160608152602001606081525090565b60408051808201909152600081526060602082015290565b803561006481610ab6565b600082601f8301126106a9578081fd5b81356106bc6106b782610a66565b610a3f565b81815291506020808301908481016040808502870183018810156106df57600080fd5b6000805b868110156107305782848b0312156106f9578182fd5b61070283610a3f565b61070c8b8661068e565b815261071a8b87870161068e565b81870152865294840194928201926001016106e3565b5050505050505092915050565b6000602080838503121561074f578182fd5b823567ffffffffffffffff80821115610766578384fd5b81850160608188031215610778578485fd5b6107826060610a3f565b9250803561078f81610ab6565b835280840135828111156107a1578586fd5b80820188601f8201126107b2578687fd5b803591506107c26106b783610a66565b82815286810190828801888502840189018c10156107de57898afd5b8993505b84841015610808576107f48c8261068e565b8352600193909301929188019188016107e2565b508088880152505050506040810135935081841115610825578485fd5b61083187858301610699565b6040840152509095945050505050565b60008282518085526020808601955080818302840101818601855b8481101561088a57601f19868403018952610878838351610897565b9884019892509083019060010161085c565b5090979650505050505050565b600081511515835260208201516040602085015280518060408601526108c4816060870160208501610a86565b601f01601f1916939093016060019392505050565b600082516108eb818460208701610a86565b9190910192915050565b7234b9b7b630ba329739b4b6b8363296b13ab93760691b815260130190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015610a3157603f1989840381018652825180516001600160a01b03168552880151888501889052805160a08987018190529091906109aa60e0880184610897565b8b830151935060608589830301818a01526109c58286610897565b8c850151955060809250868a820301838b01526109e28187610897565b828601519650878b820301858c01526109fb8188610841565b945050505080830151935050838782030160c0880152610a1b8184610841565b988b019896505050928801925050600101610966565b509098975050505050505050565b60405181810167ffffffffffffffff81118282101715610a5e57600080fd5b604052919050565b600067ffffffffffffffff821115610a7c578081fd5b5060209081020190565b60005b83811015610aa1578181015183820152602001610a89565b83811115610ab0576000848401525b50505050565b6001600160a01b0381168114610acb57600080fd5b5056fea26469706673582212207fdab23ba887586e697250870191fe8d16b68cb884e977566eb5eb05b992132464736f6c63430006050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80639e2ba4e514610030575b600080fd5b61004361003e36600461073d565b610059565b6040516100509190610942565b60405180910390f35b60606100648261006a565b92915050565b60606000610076610226565b90506060816002016001018054806020026020016040519081016040528092919081815260200182805480156100d557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100b7575b505050505090506060815160010167ffffffffffffffff811180156100f957600080fd5b5060405190808252806020026020018201604052801561013357816020015b61012061060d565b8152602001906001900390816101185790505b50905084600001518160008151811061014857fe5b60209081029190910101516001600160a01b0390911690526101698561023d565b8160008151811061017657fe5b602090810291909101810151015260005b825181101561021d5782818151811061019c57fe5b60200260200101518282600101815181106101b357fe5b60209081029190910101516001600160a01b03909116905282518390829081106101d957fe5b60209081029190910101516001600160a01b031686526101f88661023d565b82826001018151811061020757fe5b6020908102919091018101510152600101610187565b50949350505050565b60006102386102336103e1565b610410565b905090565b610245610635565b815161025090610426565b8152815161025d90610462565b6020820152815161026d9061049e565b604082015260208201515167ffffffffffffffff8111801561028e57600080fd5b506040519080825280602002602001820160405280156102c857816020015b6102b5610676565b8152602001906001900390816102ad5790505b50606082015260005b816060015151811015610326576103038360000151846020015183815181106102f657fe5b60200260200101516104da565b8260600151828151811061031357fe5b60209081029190910101526001016102d1565b5081604001515167ffffffffffffffff8111801561034357600080fd5b5060405190808252806020026020018201604052801561037d57816020015b61036a610676565b8152602001906001900390816103625790505b50608082015260005b8160800151518110156103db576103b8836040015182815181106103a657fe5b6020026020010151846000015161052d565b826080015182815181106103c857fe5b6020908102919091010152600101610386565b50919050565b60006040516020016103f2906108f5565b6040516020818303038152906040528051906020012060001c905090565b60006100648261041e610580565b63ffffffff16565b61042e610676565b6040805160048152602481019091526020810180516001600160e01b03166306fdde0360e01b179052610064908390610586565b61046a610676565b6040805160048152602481019091526020810180516001600160e01b03166395d89b4160e01b179052610064908390610586565b6104a6610676565b6040805160048152602481019091526020810180516001600160e01b031663313ce56760e01b179052610064908390610586565b6104e2610676565b61052683836040516024016104f79190610914565b60408051601f198184030181529190526020810180516001600160e01b03166370a0823160e01b179052610586565b9392505050565b610535610676565b8251602084015160405161052692859261055192602401610928565b60408051601f198184030181529190526020810180516001600160e01b031663f4b1604560e01b179052610586565b61060a90565b61058e610676565b60006060846001600160a01b0316846040516105aa91906108d9565b6000604051808303816000865af19150503d80600081146105e7576040519150601f19603f3d011682016040523d82523d6000602084013e6105ec565b606091505b50604080518082019091529115158252602082015295945050505050565b90565b604051806040016040528060006001600160a01b03168152602001610630610635565b905290565b6040518060a00160405280610648610676565b8152602001610655610676565b8152602001610662610676565b815260200160608152602001606081525090565b60408051808201909152600081526060602082015290565b803561006481610ab6565b600082601f8301126106a9578081fd5b81356106bc6106b782610a66565b610a3f565b81815291506020808301908481016040808502870183018810156106df57600080fd5b6000805b868110156107305782848b0312156106f9578182fd5b61070283610a3f565b61070c8b8661068e565b815261071a8b87870161068e565b81870152865294840194928201926001016106e3565b5050505050505092915050565b6000602080838503121561074f578182fd5b823567ffffffffffffffff80821115610766578384fd5b81850160608188031215610778578485fd5b6107826060610a3f565b9250803561078f81610ab6565b835280840135828111156107a1578586fd5b80820188601f8201126107b2578687fd5b803591506107c26106b783610a66565b82815286810190828801888502840189018c10156107de57898afd5b8993505b84841015610808576107f48c8261068e565b8352600193909301929188019188016107e2565b508088880152505050506040810135935081841115610825578485fd5b61083187858301610699565b6040840152509095945050505050565b60008282518085526020808601955080818302840101818601855b8481101561088a57601f19868403018952610878838351610897565b9884019892509083019060010161085c565b5090979650505050505050565b600081511515835260208201516040602085015280518060408601526108c4816060870160208501610a86565b601f01601f1916939093016060019392505050565b600082516108eb818460208701610a86565b9190910192915050565b7234b9b7b630ba329739b4b6b8363296b13ab93760691b815260130190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015610a3157603f1989840381018652825180516001600160a01b03168552880151888501889052805160a08987018190529091906109aa60e0880184610897565b8b830151935060608589830301818a01526109c58286610897565b8c850151955060809250868a820301838b01526109e28187610897565b828601519650878b820301858c01526109fb8188610841565b945050505080830151935050838782030160c0880152610a1b8184610841565b988b019896505050928801925050600101610966565b509098975050505050505050565b60405181810167ffffffffffffffff81118282101715610a5e57600080fd5b604052919050565b600067ffffffffffffffff821115610a7c578081fd5b5060209081020190565b60005b83811015610aa1578181015183820152602001610a89565b83811115610ab0576000848401525b50505050565b6001600160a01b0381168114610acb57600080fd5b5056fea26469706673582212207fdab23ba887586e697250870191fe8d16b68cb884e977566eb5eb05b992132464736f6c63430006050033",
  "sourceMap": "191:256:43:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;191:256:43;;;;;;;",
  "deployedSourceMap": "191:256:43:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;191:256:43;;;;;;;;;;;;;;;;12:1:-1;9;2:12;262:183:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;340:46;401:39;:5;:37;:39::i;:::-;394:46;262:183;-1:-1:-1;;262:183:43:o;363:700:44:-;468:23;499:54;556:50;:48;:50::i;:::-;499:107;;612:20;635:7;:19;;:23;;612:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;612:46:44;;;-1:-1:-1;612:46:44;;;;;;;;;;;;;;;;;;;664:30;718:3;:10;731:1;718:14;697:36;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;697:36:44;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;664:69;;757:5;:11;;;739:6;746:1;739:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;739:29:44;;;;;;791:33;818:5;791:26;:33::i;:::-;774:6;781:1;774:9;;;;;;;;;;;;;;;;;;;:14;:50;-1:-1:-1;830:210:44;854:3;:10;850:1;:14;830:210;;;917:3;921:1;917:6;;;;;;;;;;;;;;879;886:1;890;886:5;879:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;879:46:44;;;;;;963:6;;;;967:1;;963:6;;;;;;;;;;;;;;;;-1:-1:-1;;;;;933:38:44;;;1000:33;933:38;1000:26;:33::i;:::-;979:6;986:1;990;986:5;979:13;;;;;;;;;;;;;;;;;;;:18;:54;866:3;;830:210;;;-1:-1:-1;1052:6:44;363:700;-1:-1:-1;;;;363:700:44:o;1323:128:20:-;1375:15;1405:41;1422:23;:21;:23::i;:::-;1405:16;:41::i;:::-;1398:48;;1323:128;:::o;961:765:46:-;1035:30;;:::i;:::-;1097:13;;1087:24;;:9;:24::i;:::-;1073:38;;1145:13;;1133:26;;:11;:26::i;:::-;1117:13;;;:42;1197:13;;1183:28;;:13;:28::i;:::-;1165:15;;;:46;1263:22;;;;:29;1246:47;;;2:2:-1;;;;27:1;24;17:12;2:2;1246:47:46;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1217:26:46;;;:76;1304:9;1299:165;1323:6;:26;;;:33;1319:1;:37;1299:165;;;1403:54;1416:7;:13;;;1431:7;:22;;;1454:1;1431:25;;;;;;;;;;;;;;1403:12;:54::i;:::-;1371:6;:26;;;1398:1;1371:29;;;;;;;;;;;;;;;;;:86;1358:3;;1299:165;;;;1516:7;:23;;;:30;1499:48;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1499:48:46;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1469:27:46;;;:78;1558:9;1553:169;1577:6;:27;;;:34;1573:1;:38;1553:169;;;1659:56;1673:7;:23;;;1697:1;1673:26;;;;;;;;;;;;;;1701:7;:13;;;1659;:56::i;:::-;1626:6;:27;;;1654:1;1626:30;;;;;;;;;;;;;;;;;:89;1613:3;;1553:169;;;;961:765;;;:::o;816:140:20:-;870:7;910:39;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;910:39:20;;;900:50;;;;;;892:59;;885:66;;816:140;:::o;1198:122::-;1260:15;1290:25;1311:3;1290:20;:18;:20::i;:::-;:25;;:::i;2186:140:46:-;2238:17;;:::i;:::-;2287:33;;;22:32:-1;6:49;;2287:33:46;;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;2270:51:46;;2280:5;;2270:9;:51::i;2039:144::-;2093:17;;:::i;:::-;2142:35;;;22:32:-1;6:49;;2142:35:46;;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;2125:53:46;;2135:5;;2125:9;:53::i;802:156::-;866:17;;:::i;:::-;915:37;;;22:32:-1;6:49;;915:37:46;;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;898:55:46;;908:5;;898:9;:55::i;1861:175::-;1930:17;;:::i;:::-;1962:69;1972:5;2025:4;1979:51;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1979:51:46;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1962:9:46;:69::i;:::-;1955:76;1861:175;-1:-1:-1;;;1861:175:46:o;2329:240::-;2420:17;;:::i;:::-;2522:19;;2543;;;;2469:94;;2452:112;;2462:5;;2469:94;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;2469:94:46;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;2452:9:46;:112::i;959:236:20:-;1136:14;;1165:26::o;564:235:46:-;638:17;;:::i;:::-;700:19;;664:12;;678:18;;-1:-1:-1;;;;;700:10:46;;;:19;;711:7;;700:19;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;732:62:46;;;;;;;;;;;;;;;;;;;564:235;-1:-1:-1;;;;;564:235:46:o;325:76:18:-;395:1;325:76::o;191:256:43:-;;;;;;;;;;-1:-1:-1;191:256:43;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;191:256:43;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;1080:821;;1235:3;1228:4;1220:6;1216:17;1212:27;1202:2;;-1:-1;;1243:12;1202:2;1290:6;1277:20;1312:118;1327:102;1422:6;1327:102;;;1312:118;;;1458:21;;;1303:127;-1:-1;1502:4;1515:14;;;;1490:17;;;1616:4;1604:17;;;1595:27;;;;1592:36;-1:-1;1589:2;;;1641:1;;1631:12;1589:2;1666:1;;1651:244;1676:6;1673:1;1670:13;1651:244;;;1616:4;2072:9;2067:3;2063:19;2059:30;2056:2;;;1666:1;;2092:12;2056:2;2120:20;1616:4;2120:20;;;2231:57;2284:3;2260:22;2231:57;;;2213:16;2206:83;2392:57;2445:3;1502:4;2425:9;2421:22;2392:57;;;2374:16;;;2367:83;1744:88;;1846:14;;;;1874;;;;1698:1;1691:9;1651:244;;;1655:14;;;;;;;1195:706;;;;;3441:397;;3580:2;;3568:9;3559:7;3555:23;3551:32;3548:2;;;-1:-1;;3586:12;3548:2;3644:17;3631:31;3682:18;;3674:6;3671:30;3668:2;;;-1:-1;;3704:12;3668:2;3805:6;3794:9;3790:22;2647:4;2635:9;2630:3;2626:19;2622:30;2619:2;;;-1:-1;;2655:12;2619:2;2683:20;2647:4;2683:20;;;2674:29;;230:6;217:20;242:41;277:5;242:41;;;2761:83;;2928:18;;;2915:32;2956:30;;;2953:2;;;-1:-1;;2989:12;2953:2;3095:6;3084:9;3080:22;430:3;423:4;415:6;411:17;407:27;397:2;;-1:-1;;438:12;397:2;485:6;472:20;458:34;;507:80;522:64;579:6;522:64;;507:80;615:21;;;672:14;;;;647:17;;;761;;;752:27;;;;749:36;-1:-1;746:2;;;-1:-1;;788:12;746:2;-1:-1;814:10;;808:206;833:6;830:1;827:13;808:206;;;913:37;946:3;934:10;913:37;;;901:50;;855:1;848:9;;;;;965:14;;;;993;;808:206;;;812:14;3034:74;3580:2;3020:5;3016:16;3009:100;;;;;3209:2;3198:9;3194:18;3181:32;3167:46;;3682:18;3225:6;3222:30;3219:2;;;-1:-1;;3255:12;3219:2;3300:112;3408:3;3399:6;3388:9;3384:22;3300:112;;;3209:2;3282:16;;3275:138;-1:-1;3286:5;;3542:296;-1:-1;;;;;3542:296;4886:1052;;5063:96;5153:5;14653:12;15437:6;15432:3;15425:19;15474:4;;15469:3;15465:14;5165:111;;15474:4;;5333:6;5329:17;15469:3;5320:27;;15474:4;5446:5;14289:14;-1:-1;5485:414;5510:6;5507:1;5504:13;5485:414;;;5562:20;;15469:3;5566:4;5562:20;;5557:3;5550:33;4003:102;4101:3;5617:6;5611:13;4003:102;;;5878:14;;;;5631:128;-1:-1;15115:14;;;;5532:1;5525:9;5485:414;;;-1:-1;5922:10;;5056:882;-1:-1;;;;;;;5056:882;8394:563;;8616:16;8610:23;16450:13;16443:21;7225:3;7218:34;8776:4;8769:5;8765:16;8759:23;8541:4;8776;8806:3;8802:14;8795:38;7396:5;14653:12;15437:6;8541:4;8536:3;8532:14;15425:19;7479:52;7524:6;15465:14;8536:3;15465:14;8776:4;7505:5;7501:16;7479:52;;;5562:20;16949:14;-1:-1;;16945:28;7543:39;;;;15465:14;7543:39;;8514:443;-1:-1;;;8514:443;11464:262;;7754:5;14653:12;7865:52;7910:6;7905:3;7898:4;7891:5;7887:16;7865:52;;;7929:16;;;;;11589:137;-1:-1;;11589:137;11733:372;-1:-1;;;8234:42;;8218:2;8295:12;;11913:192;12112:213;-1:-1;;;;;16538:54;;;;4486:45;;12230:2;12215:18;;12201:124;12332:388;-1:-1;;;;;16538:54;;;4486:45;;16538:54;;12706:2;12691:18;;4486:45;12510:2;12495:18;;12481:239;12727:489;12959:2;12973:47;;;14653:12;;12944:18;;;15425:19;;;12727:489;;12959:2;15465:14;;;;;;6530:17;;;6521:27;;;;14289:14;;;12727:489;6690:426;6715:6;6712:1;6709:13;6690:426;;;-1:-1;;6767:20;;;;;6755:33;;6816:13;;9285:23;;-1:-1;;;;;16538:54;4486:45;;9461:16;;9455:23;9498:14;;;9491:38;;;10020:23;;-1:-1;9209:14;;;10056:38;;;10020:23;;9455;10109:109;9945:14;;;10020:23;10109:109;;;12959:2;10298:5;10294:16;10288:23;10268:43;;10331:14;6767:20;9213:3;10351:4;10347:14;;10331;9213:3;10331:14;10324:38;10377:109;10481:4;10467:12;10377:109;;;15465:14;10568:5;10564:16;10558:23;10538:43;;10601:14;;;6767:20;9213:3;10621:4;10617:14;;10601;9213:3;10601:14;10594:38;10647:109;10751:4;10737:12;10647:109;;;10331:14;10849:5;10845:16;10839:23;10819:43;;6767:20;9213:3;10902:4;10898:14;;9954:4;9213:3;10882:14;10875:38;10928:159;11082:4;11068:12;10928:159;;;10920:167;;;;;10601:14;11181:5;11177:16;11171:23;11151:43;;;6767:20;9213:3;11234:4;11230:14;;11214;9213:3;11214:14;11207:38;11260:159;11414:4;11400:12;11260:159;;;7095:14;;;;6836:136;-1:-1;;;15115:14;;;;-1:-1;;6737:1;6730:9;6690:426;;;-1:-1;13026:180;;12930:286;-1:-1;;;;;;;;12930:286;13223:256;13285:2;13279:9;13311:17;;;13386:18;13371:34;;13407:22;;;13368:62;13365:2;;;13443:1;;13433:12;13365:2;13285;13452:22;13263:216;;-1:-1;13263:216;13486:304;;13645:18;13637:6;13634:30;13631:2;;;-1:-1;;13667:12;13631:2;-1:-1;13712:4;13700:17;;;13765:15;;13568:222;16605:268;16670:1;16677:101;16691:6;16688:1;16685:13;16677:101;;;16758:11;;;16752:18;16739:11;;;16732:39;16713:2;16706:10;16677:101;;;16793:6;16790:1;16787:13;16784:2;;;16670:1;16849:6;16844:3;16840:16;16833:27;16784:2;;16654:219;;;;16986:117;-1:-1;;;;;16538:54;;17045:35;;17035:2;;17094:1;;17084:12;17035:2;17029:74;",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport { TokenQueryLib } from \"../token/TokenQueryLib.sol\";\nimport { PortfolioReaderViewLib } from \"./PortfolioReaderViewLib.sol\";\n\ncontract PortfolioReaderView {\n  using PortfolioReaderViewLib for *;\n  function render(TokenQueryLib.TokenQueryPayload memory query) public returns (PortfolioReaderViewLib.PortfolioEntry[] memory) {\n    return query.executePortfolioReaderViewLogic();\n  }\n}\n",
  "sourcePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol",
  "ast": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol",
    "exportedSymbols": {
      "PortfolioReaderView": [
        8449
      ]
    },
    "id": 8450,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8428,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "id": 8429,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:43"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/token/TokenQueryLib.sol",
        "file": "../token/TokenQueryLib.sol",
        "id": 8431,
        "nodeType": "ImportDirective",
        "scope": 8450,
        "sourceUnit": 8923,
        "src": "59:59:43",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8430,
              "name": "TokenQueryLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "68:13:43",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderViewLib.sol",
        "file": "./PortfolioReaderViewLib.sol",
        "id": 8433,
        "nodeType": "ImportDirective",
        "scope": 8450,
        "sourceUnit": 8578,
        "src": "119:70:43",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8432,
              "name": "PortfolioReaderViewLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "128:22:43",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8449,
        "linearizedBaseContracts": [
          8449
        ],
        "name": "PortfolioReaderView",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8435,
            "libraryName": {
              "contractScope": null,
              "id": 8434,
              "name": "PortfolioReaderViewLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8577,
              "src": "230:22:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PortfolioReaderViewLib_$8577",
                "typeString": "library PortfolioReaderViewLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:35:43",
            "typeName": null
          },
          {
            "body": {
              "id": 8447,
              "nodeType": "Block",
              "src": "388:57:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8443,
                        "name": "query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8437,
                        "src": "401:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenQueryPayload_$8664_memory_ptr",
                          "typeString": "struct TokenQueryLib.TokenQueryPayload memory"
                        }
                      },
                      "id": 8444,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executePortfolioReaderViewLogic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8576,
                      "src": "401:37:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenQueryPayload_$8664_memory_ptr_$returns$_t_array$_t_struct$_PortfolioEntry_$8461_memory_ptr_$dyn_memory_ptr_$bound_to$_t_struct$_TokenQueryPayload_$8664_memory_ptr_$",
                        "typeString": "function (struct TokenQueryLib.TokenQueryPayload memory) returns (struct PortfolioReaderViewLib.PortfolioEntry memory[] memory)"
                      }
                    },
                    "id": 8445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:39:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$8461_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry memory[] memory"
                    }
                  },
                  "functionReturnParameters": 8442,
                  "id": 8446,
                  "nodeType": "Return",
                  "src": "394:46:43"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9e2ba4e5",
            "id": 8448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "render",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8437,
                  "name": "query",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8448,
                  "src": "278:44:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenQueryPayload_$8664_memory_ptr",
                    "typeString": "struct TokenQueryLib.TokenQueryPayload"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8436,
                    "name": "TokenQueryLib.TokenQueryPayload",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8664,
                    "src": "278:31:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenQueryPayload_$8664_storage_ptr",
                      "typeString": "struct TokenQueryLib.TokenQueryPayload"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:46:43"
            },
            "returnParameters": {
              "id": 8442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8448,
                  "src": "340:46:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$8461_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 8439,
                      "name": "PortfolioReaderViewLib.PortfolioEntry",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 8461,
                      "src": "340:37:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PortfolioEntry_$8461_storage_ptr",
                        "typeString": "struct PortfolioReaderViewLib.PortfolioEntry"
                      }
                    },
                    "id": 8440,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "340:39:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$8461_storage_$dyn_storage_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "339:48:43"
            },
            "scope": 8449,
            "src": "262:183:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8450,
        "src": "191:256:43"
      }
    ],
    "src": "0:448:43"
  },
  "legacyAST": {
    "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderView.sol",
    "exportedSymbols": {
      "PortfolioReaderView": [
        8449
      ]
    },
    "id": 8450,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8428,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "id": 8429,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:43"
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/token/TokenQueryLib.sol",
        "file": "../token/TokenQueryLib.sol",
        "id": 8431,
        "nodeType": "ImportDirective",
        "scope": 8450,
        "sourceUnit": 8923,
        "src": "59:59:43",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8430,
              "name": "TokenQueryLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "68:13:43",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ray/0confirmation/packages/0confirmation-sol/contracts/queries/portfolio/PortfolioReaderViewLib.sol",
        "file": "./PortfolioReaderViewLib.sol",
        "id": 8433,
        "nodeType": "ImportDirective",
        "scope": 8450,
        "sourceUnit": 8578,
        "src": "119:70:43",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 8432,
              "name": "PortfolioReaderViewLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "128:22:43",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8449,
        "linearizedBaseContracts": [
          8449
        ],
        "name": "PortfolioReaderView",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8435,
            "libraryName": {
              "contractScope": null,
              "id": 8434,
              "name": "PortfolioReaderViewLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8577,
              "src": "230:22:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PortfolioReaderViewLib_$8577",
                "typeString": "library PortfolioReaderViewLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:35:43",
            "typeName": null
          },
          {
            "body": {
              "id": 8447,
              "nodeType": "Block",
              "src": "388:57:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8443,
                        "name": "query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8437,
                        "src": "401:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenQueryPayload_$8664_memory_ptr",
                          "typeString": "struct TokenQueryLib.TokenQueryPayload memory"
                        }
                      },
                      "id": 8444,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executePortfolioReaderViewLogic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8576,
                      "src": "401:37:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenQueryPayload_$8664_memory_ptr_$returns$_t_array$_t_struct$_PortfolioEntry_$8461_memory_ptr_$dyn_memory_ptr_$bound_to$_t_struct$_TokenQueryPayload_$8664_memory_ptr_$",
                        "typeString": "function (struct TokenQueryLib.TokenQueryPayload memory) returns (struct PortfolioReaderViewLib.PortfolioEntry memory[] memory)"
                      }
                    },
                    "id": 8445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:39:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$8461_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry memory[] memory"
                    }
                  },
                  "functionReturnParameters": 8442,
                  "id": 8446,
                  "nodeType": "Return",
                  "src": "394:46:43"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9e2ba4e5",
            "id": 8448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "render",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8437,
                  "name": "query",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8448,
                  "src": "278:44:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenQueryPayload_$8664_memory_ptr",
                    "typeString": "struct TokenQueryLib.TokenQueryPayload"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8436,
                    "name": "TokenQueryLib.TokenQueryPayload",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8664,
                    "src": "278:31:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenQueryPayload_$8664_storage_ptr",
                      "typeString": "struct TokenQueryLib.TokenQueryPayload"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:46:43"
            },
            "returnParameters": {
              "id": 8442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8448,
                  "src": "340:46:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$8461_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 8439,
                      "name": "PortfolioReaderViewLib.PortfolioEntry",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 8461,
                      "src": "340:37:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PortfolioEntry_$8461_storage_ptr",
                        "typeString": "struct PortfolioReaderViewLib.PortfolioEntry"
                      }
                    },
                    "id": 8440,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "340:39:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PortfolioEntry_$8461_storage_$dyn_storage_ptr",
                      "typeString": "struct PortfolioReaderViewLib.PortfolioEntry[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "339:48:43"
            },
            "scope": 8449,
            "src": "262:183:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8450,
        "src": "191:256:43"
      }
    ],
    "src": "0:448:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.5+commit.f956cc89.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-22T09:15:43.893Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}