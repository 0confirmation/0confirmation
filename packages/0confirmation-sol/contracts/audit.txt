Minimal Audit Requirements

Question: Is there a codepath possible from ShifterBorrowProxy.sol ->
completion of a UniswapV2Adapter.sol supported function which enables funds to
exit the system which cannot be recovered, by the time the
proxy(address,value,bytes) call exits

Invariants:

- Assume the "to" address in the proxy call is the UniswapV2Router02.sol, and
that all module resolution is correct
- Assume there are no Solidity bugs in experimental ABIEncoderV2 usage, assume all administrative functions are set correctly and the configuration set by "setup" in 0confirmation-sol/deploy/1_deploy.js is
not changed from where it is initialized
- Assume the LiquidityToken.sol is implemented properly
- Assume the gas refunding logic is sound
- Assume we are not calling the UniswapV2Adapter through means of a
  initializationActions borrow script

Simplified: We are simply checking if the logic in UniswapV2Adapter and the
interaction with ERC20Adapter is sound, where all funds, if they exit, are
temporarily stored in an AssetForwarder in the correct amounts, and no user
funds are lost via the UniswapV2Adapter module which is complex in nature

